{"version":3,"sources":["skylark-simditor.js"],"names":["define","exports","module","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","langx","$","hotkeys","uploader","Util","InputManager","Selection","UndoManager","Keystroke","Formatter","Toolbar","Indentation","Clipboard","i18n","Simditor","Evented","inherit","init","opts","editor","uploadOpts","this","extend","util","textarea","placeholder","length","Error","data","destroy","id","count","_render","el","body","upload","inputManager","selection","undoManager","keystroke","formatter","toolbar","toolbarFloat","toolbarHidden","toolbarFloatOffset","indentation","clipboard","self","on","_placeholder","setValue","val","trim","focus","browser","mozilla","reflow","document","execCommand","_error","prototype","triggerHandler","trigger","type","args","concat","apply","defaultImage","params","indentWidth","_tpl","key","ref","results","insertBefore","wrapper","find","placeholderEl","append","blur","os","mac","addClass","linux","mobile","push","name","value","insertAfter","children","isEmptyNode","parseInt","css","show","hide","hidePopover","get","innerHTML","format","decorate","lastCaretPosition","getValue","sync","cloneBody","emptyP","firstP","lastP","clone","undecorate","autolink","last","first","is","prev","remove","next","html","$blockEl","range","caretPosition","phBr","appendTo","createRange","setRangeAtEndOf","each","i","popover","active","closest","off","clear","focused","removeData","window","zh-CN","blockquote","bold","code","color","coloredText","hr","image","externalImage","uploadImage","uploadFailed","uploadError","imageUrl","imageSize","imageAlt","restoreImageSize","uploading","indent","outdent","italic","link","linkText","linkUrl","linkTarget","openLinkInCurrentWindow","openLinkInNewWindow","removeLink","ol","ul","strikethrough","table","deleteRow","insertRowAbove","insertRowBelow","deleteColumn","insertColumnLeft","insertColumnRight","deleteTable","title","normalText","underline","alignment","alignCenter","alignLeft","alignRight","selectLanguage","fontScale","fontScaleXLarge","fontScaleLarge","fontScaleNormal","fontScaleSmall","fontScaleXSmall","en-US","translate","result","arguments","slice","call","locale","replace","p0","p","position","shift","Button","_init","item","menuWrapper","menuItem","separator","icon","text","htmlTag","disableTag","menu","disabled","needFocus","shortcut","k","len","tag","_this","render","e","noFocus","param","preventDefault","hasClass","toggleClass","siblings","removeClass","offset","left","outerWidth","right","command","btn","currentTarget","pasting","setActive","setDisabled","add","mousedown","split","inArray","_allowedTags","_status","iconClassOf","setIcon","list","renderMenu","$menuBtnEl","$menuItemEl","ref1","menuEl","data-param","_disableStatus","endNodes","startNodes","filter","_activeStatus","endNode","startNode","node","_t","Popover","button","top","target","_initLabelWidth","$fields","_labelWidth","field","$field","$label","Math","max","width","$target","refresh","editorOffset","maxLeft","targetH","targetOffset","outerHeight","height","min","floatInitialized","initToolbarFloat","toolbarHeight","bottomEdge","scrollTop","topEdge","buttons","pluginName","prependTo","constructor","findButton","addButton","AlignmentButton","align","end","nodes","text-align","throttledSelectionChanged","BlockquoteButton","$rootNodes","clearCache","nodeCache","rootNodes","parent","save","$node","unwrap","isDecoratedNode","restore","BoldButton","queryCommandState","support","oninput","CodePopover","lang","langs","codeLanguages","selectEl","selected","removeAttr","CodeButton","$el","pre","_checkMode","cloneContents","blockNodes","join","collapsed","inlineMode","$pre","$code","match","contents","wrapInner","_inlineCommand","_blockCommand","resultNodes","clearHtml","$p","replaceAll","$contents","selectNodeContents","extractContents","insertNode","ColorButton","$link","hex","rgb","textNode","getComputedStyle","getPropertyValue","_convertRgbToHex","createTextNode","exec","r","g","b","componentToHex","c","toString","rgbToHex","FontScaleButton","sizeMap","x-large","large","small","x-small","containerNode","reset","nodeType","Node","TEXT_NODE","n","$span","size","style","fontSize","test","replaceWith","HrButton","$hr","$newBlock","$rootBlock","setRangeAtStartOf","ImagePopover","tpl","srcEl","widthEl","heightEl","altEl","which","setRangeAfter","_loadImage","_resizeImg","inputEl","$img","_restoreImg","alt","_initUploader","$uploadBtn","createInput","input","multiple","accept","stopPropagation","inline","img","onlySetVal","isNumber","src","callback","loadImage","blob","dataURLtoBlob","prop","ImageButton","imageButton","selectNode","onselectionchange","startContainer","eq","startOffset","$masks","mask","$mask","file","cancel","$uploadItem","$input","uploadProgress","one","createImage","readImageFile","proxy","throttle","loaded","total","percent","toFixed","img_path","msg","JSON","parse","success","alert","file_path","xhr","statusText","responseText","positionMask","imgOffset","wrapperOffset","Image","onload","data-image-size","isFunction","onerror","deleteContents","click","select","IndentButton","hotkey","tabIndent","ItalicButton","LinkPopover","textEl","urlEl","unlinkEl","selectTarget","throttledValueChanged","shiftKey","txtNode","LinkButton","rangeAtEndOf","href","noder","ListButton","$list","anotherType","contains","li","OrderListButton","OutdentButton","StrikethroughButton","dom","tables","_changeCellTag","$tr","tagName","cell","$cell","td","$block","$table","$td","refreshTableWidth","setTimeout","cols","tableWidth","mixin","createTable","row","col","$tbody","$thead","l","cssClasses","$colgroup","$headRow","$wrapper","tableDecorate","wrap","before","prepend","class","resizeHandle","contenteditable","deleteCol","$newTd","index","noOtherCol","noOtherRow","tr","$newTr","$nextTr","_nextRow","$prevTr","_prevRow","insertCol","direction","$col","$newCol","cellTag","parseFloat","insertRow","colNum","resizable","container","options","clsResizeHandle","selectorWrapper","selectorResizeHandle","$resizeHandle","parents","pageX","$handle","$leftCol","$leftTd","$rightCol","$rightTd","startHandleLeft","startLeftWidth","startRightWidth","startX","deltaX","leftWidth","rightWidth","TableButton","merge","_allowedAttributes","_allowedStyles","th","_initShortcuts","_initResize","$container","_tdNav","$anotherTr","action","editMenu","createMenu","$trs","num","prevAll","addBack","$closestBlock","rowNum","after","ret","newTr","newTd","TitleButton","toLowerCase","UnderlineButton","UnorderListButton","main"],"mappings":"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","file":"../skylark-simditor.js","sourcesContent":["define([], function () {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    define([\n        'skylark-langx/langx',\n        'skylark-jquery',\n        './hotkeys',\n        './uploader',\n        './Util',\n        './InputManager',\n        './Selection',\n        './UndoManager',\n        './Keystroke',\n        './Formatter',\n        './Toolbar',\n        './Indentation',\n        './Clipboard',\n        './i18n'\n    ], function (langx, $, hotkeys, uploader, Util, InputManager, Selection, UndoManager, Keystroke, Formatter, Toolbar, Indentation, Clipboard, i18n) {\n        var Simditor = langx.Evented.inherit({\n            init: function (opts) {\n                this.opts = langx.extend({}, this.opts, opts);\n                this.util = new Util(this);\n                var e, editor, uploadOpts;\n                this.textarea = $(this.opts.textarea);\n                this.opts.placeholder = this.opts.placeholder || this.textarea.attr('placeholder');\n                if (!this.textarea.length) {\n                    throw new Error('simditor: param textarea is required.');\n                    return;\n                }\n                editor = this.textarea.data('simditor');\n                if (editor != null) {\n                    editor.destroy();\n                }\n                this.id = ++Simditor.count;\n                this._render();\n                if (hotkeys) {\n                    this.hotkeys = hotkeys({ el: this.body });\n                } else {\n                    throw new Error('simditor: simple-hotkeys is required.');\n                    return;\n                }\n                if (this.opts.upload && uploader) {\n                    uploadOpts = typeof this.opts.upload === 'object' ? this.opts.upload : {};\n                    this.uploader = uploader(uploadOpts);\n                }\n                this.inputManager = new InputManager(this);\n                this.selection = new Selection(this);\n                this.undoManager = new UndoManager(this);\n                this.keystroke = new Keystroke(this);\n                this.formatter = new Formatter(this);\n                this.toolbar = new Toolbar(this, {\n                    toolbar: this.opts.toolbar,\n                    toolbarFloat: this.opts.toolbarFloat,\n                    toolbarHidden: this.opts.toolbarHidden,\n                    toolbarFloatOffset: this.opts.toolbarFloatOffset\n                });\n                this.indentation = new Indentation(this);\n                this.clipboard = new Clipboard(this);\n                var self = this;\n                if (this.opts.placeholder) {\n                    this.on('valuechanged', function () {\n                        return self._placeholder();\n                    });\n                }\n                this.setValue(this.textarea.val().trim() || '');\n                if (this.textarea.attr('autofocus')) {\n                    return self.focus();\n                }\n                if (this.util.browser.mozilla) {\n                    this.util.reflow();\n                    try {\n                        document.execCommand('enableObjectResizing', false, false);\n                        return document.execCommand('enableInlineTableEditing', false, false);\n                    } catch (_error) {\n                        e = _error;\n                    }\n                }\n            }\n        });\n        Simditor.prototype.triggerHandler = Simditor.prototype.trigger = function (type, data) {\n            var args, ref;\n            args = [type];\n            if (data) {\n                args = args.concat(data);\n            }\n            langx.Evented.prototype.trigger.apply(this, args);\n            return this;\n        };\n        Simditor.count = 0;\n        Simditor.prototype.opts = {\n            textarea: null,\n            placeholder: '',\n            defaultImage: 'images/image.png',\n            params: {},\n            upload: false,\n            indentWidth: 40\n        };\n        Simditor.prototype._tpl = '<div class=\"simditor\">\\n  <div class=\"simditor-wrapper\">\\n    <div class=\"simditor-placeholder\"></div>\\n    <div class=\"simditor-body\" contenteditable=\"true\">\\n    </div>\\n  </div>\\n</div>';\n        Simditor.prototype._render = function () {\n            var key, ref, results, val;\n            this.el = $(this._tpl).insertBefore(this.textarea);\n            this.wrapper = this.el.find('.simditor-wrapper');\n            this.body = this.wrapper.find('.simditor-body');\n            this.placeholderEl = this.wrapper.find('.simditor-placeholder').append(this.opts.placeholder);\n            this.el.data('simditor', this);\n            this.wrapper.append(this.textarea);\n            this.textarea.data('simditor', this).blur();\n            this.body.attr('tabindex', this.textarea.attr('tabindex'));\n            if (this.util.os.mac) {\n                this.el.addClass('simditor-mac');\n            } else if (this.util.os.linux) {\n                this.el.addClass('simditor-linux');\n            }\n            if (this.util.os.mobile) {\n                this.el.addClass('simditor-mobile');\n            }\n            if (this.opts.params) {\n                ref = this.opts.params;\n                results = [];\n                for (key in ref) {\n                    val = ref[key];\n                    results.push($('<input/>', {\n                        type: 'hidden',\n                        name: key,\n                        value: val\n                    }).insertAfter(this.textarea));\n                }\n                return results;\n            }\n        };\n        Simditor.prototype._placeholder = function () {\n            var children;\n            children = this.body.children();\n            if (children.length === 0 || children.length === 1 && this.util.isEmptyNode(children) && parseInt(children.css('margin-left') || 0) < this.opts.indentWidth) {\n                return this.placeholderEl.show();\n            } else {\n                return this.placeholderEl.hide();\n            }\n        };\n        Simditor.prototype.setValue = function (val) {\n            this.hidePopover();\n            this.textarea.val(val);\n            this.body.get(0).innerHTML = val;\n            this.formatter.format();\n            this.formatter.decorate();\n            this.util.reflow(this.body);\n            this.inputManager.lastCaretPosition = null;\n            return this.trigger('valuechanged');\n        };\n        Simditor.prototype.getValue = function () {\n            return this.sync();\n        };\n        Simditor.prototype.sync = function () {\n            var children, cloneBody, emptyP, firstP, lastP, val;\n            cloneBody = this.body.clone();\n            this.formatter.undecorate(cloneBody);\n            this.formatter.format(cloneBody);\n            this.formatter.autolink(cloneBody);\n            children = cloneBody.children();\n            lastP = children.last('p');\n            firstP = children.first('p');\n            while (lastP.is('p') && this.util.isEmptyNode(lastP)) {\n                emptyP = lastP;\n                lastP = lastP.prev('p');\n                emptyP.remove();\n            }\n            while (firstP.is('p') && this.util.isEmptyNode(firstP)) {\n                emptyP = firstP;\n                firstP = lastP.next('p');\n                emptyP.remove();\n            }\n            cloneBody.find('img.uploading').remove();\n            val = langx.trim(cloneBody.html());\n            this.textarea.val(val);\n            return val;\n        };\n        Simditor.prototype.focus = function () {\n            var $blockEl, range;\n            if (!(this.body.is(':visible') && this.body.is('[contenteditable]'))) {\n                this.el.find('textarea:visible').focus();\n                return;\n            }\n            if (this.inputManager.lastCaretPosition) {\n                this.undoManager.caretPosition(this.inputManager.lastCaretPosition);\n                return this.inputManager.lastCaretPosition = null;\n            } else {\n                $blockEl = this.body.children().last();\n                if (!$blockEl.is('p')) {\n                    $blockEl = $('<p/>').append(this.util.phBr).appendTo(this.body);\n                }\n                range = document.createRange();\n                return this.selection.setRangeAtEndOf($blockEl, range);\n            }\n        };\n        Simditor.prototype.blur = function () {\n            if (this.body.is(':visible') && this.body.is('[contenteditable]')) {\n                return this.body.blur();\n            } else {\n                return this.body.find('textarea:visible').blur();\n            }\n        };\n        Simditor.prototype.hidePopover = function () {\n            return this.el.find('.simditor-popover').each(function (i, popover) {\n                popover = $(popover).data('popover');\n                if (popover.active) {\n                    return popover.hide();\n                }\n            });\n        };\n        Simditor.prototype.destroy = function () {\n            this.triggerHandler('destroy');\n            this.textarea.closest('form').off('.simditor .simditor-' + this.id);\n            this.selection.clear();\n            this.inputManager.focused = false;\n            this.textarea.insertBefore(this.el).hide().val('').removeData('simditor');\n            this.el.remove();\n            $(document).off('.simditor-' + this.id);\n            $(window).off('.simditor-' + this.id);\n            return this.off();\n        };\n        Simditor.Toolbar = Toolbar;\n        Simditor.i18n = i18n;\n        return Simditor;\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine(\"skylark-simditor/Simditor\", function(){});\n\ndefine('skylark-simditor/i18n',[\r\n\r\n],function(){ \r\n\r\n    var i18n =  {\r\n      'zh-CN': {\r\n        'blockquote': '引用',\r\n        'bold': '加粗文字',\r\n        'code': '插入代码',\r\n        'color': '文字颜色',\r\n        'coloredText': '彩色文字',\r\n        'hr': '分隔线',\r\n        'image': '插入图片',\r\n        'externalImage': '外链图片',\r\n        'uploadImage': '上传图片',\r\n        'uploadFailed': '上传失败了',\r\n        'uploadError': '上传出错了',\r\n        'imageUrl': '图片地址',\r\n        'imageSize': '图片尺寸',\r\n        'imageAlt': '图片描述',\r\n        'restoreImageSize': '还原图片尺寸',\r\n        'uploading': '正在上传',\r\n        'indent': '向右缩进',\r\n        'outdent': '向左缩进',\r\n        'italic': '斜体文字',\r\n        'link': '插入链接',\r\n        'linkText': '链接文字',\r\n        'linkUrl': '链接地址',\r\n        'linkTarget': '打开方式',\r\n        'openLinkInCurrentWindow': '在当前窗口中打开',\r\n        'openLinkInNewWindow': '在新窗口中打开',\r\n        'removeLink': '移除链接',\r\n        'ol': '有序列表',\r\n        'ul': '无序列表',\r\n        'strikethrough': '删除线文字',\r\n        'table': '表格',\r\n        'deleteRow': '删除行',\r\n        'insertRowAbove': '在上面插入行',\r\n        'insertRowBelow': '在下面插入行',\r\n        'deleteColumn': '删除列',\r\n        'insertColumnLeft': '在左边插入列',\r\n        'insertColumnRight': '在右边插入列',\r\n        'deleteTable': '删除表格',\r\n        'title': '标题',\r\n        'normalText': '普通文本',\r\n        'underline': '下划线文字',\r\n        'alignment': '水平对齐',\r\n        'alignCenter': '居中',\r\n        'alignLeft': '居左',\r\n        'alignRight': '居右',\r\n        'selectLanguage': '选择程序语言',\r\n        'fontScale': '字体大小',\r\n        'fontScaleXLarge': '超大字体',\r\n        'fontScaleLarge': '大号字体',\r\n        'fontScaleNormal': '正常大小',\r\n        'fontScaleSmall': '小号字体',\r\n        'fontScaleXSmall': '超小字体'\r\n      },\r\n      'en-US': {\r\n        'blockquote': 'Block Quote',\r\n        'bold': 'Bold',\r\n        'code': 'Code',\r\n        'color': 'Text Color',\r\n        'coloredText': 'Colored Text',\r\n        'hr': 'Horizontal Line',\r\n        'image': 'Insert Image',\r\n        'externalImage': 'External Image',\r\n        'uploadImage': 'Upload Image',\r\n        'uploadFailed': 'Upload failed',\r\n        'uploadError': 'Error occurs during upload',\r\n        'imageUrl': 'Url',\r\n        'imageSize': 'Size',\r\n        'imageAlt': 'Alt',\r\n        'restoreImageSize': 'Restore Origin Size',\r\n        'uploading': 'Uploading',\r\n        'indent': 'Indent',\r\n        'outdent': 'Outdent',\r\n        'italic': 'Italic',\r\n        'link': 'Insert Link',\r\n        'linkText': 'Text',\r\n        'linkUrl': 'Url',\r\n        'linkTarget': 'Target',\r\n        'openLinkInCurrentWindow': 'Open link in current window',\r\n        'openLinkInNewWindow': 'Open link in new window',\r\n        'removeLink': 'Remove Link',\r\n        'ol': 'Ordered List',\r\n        'ul': 'Unordered List',\r\n        'strikethrough': 'Strikethrough',\r\n        'table': 'Table',\r\n        'deleteRow': 'Delete Row',\r\n        'insertRowAbove': 'Insert Row Above',\r\n        'insertRowBelow': 'Insert Row Below',\r\n        'deleteColumn': 'Delete Column',\r\n        'insertColumnLeft': 'Insert Column Left',\r\n        'insertColumnRight': 'Insert Column Right',\r\n        'deleteTable': 'Delete Table',\r\n        'title': 'Title',\r\n        'normalText': 'Text',\r\n        'underline': 'Underline',\r\n        'alignment': 'Alignment',\r\n        'alignCenter': 'Align Center',\r\n        'alignLeft': 'Align Left',\r\n        'alignRight': 'Align Right',\r\n        'selectLanguage': 'Select Language',\r\n        'fontScale': 'Font Size',\r\n        'fontScaleXLarge': 'X Large Size',\r\n        'fontScaleLarge': 'Large Size',\r\n        'fontScaleNormal': 'Normal Size',\r\n        'fontScaleSmall': 'Small Size',\r\n        'fontScaleXSmall': 'X Small Size'\r\n      },\r\n\r\n      translate : function() {\r\n        var args, key, ref, result;\r\n        key = arguments[0], args = 2 <= arguments.length ? Array.prototype.slice.call(arguments, 1) : [];\r\n        result = ((ref = i18n[this.locale]) != null ? ref[key] : void 0) || '';\r\n        if (!(args.length > 0)) {\r\n          return result;\r\n        }\r\n        result = result.replace(/([^%]|^)%(?:(\\d+)\\$)?s/g, function(p0, p, position) {\r\n          if (position) {\r\n            return p + args[parseInt(position) - 1];\r\n          } else {\r\n            return p + args.shift();\r\n          }\r\n        });\r\n        return result.replace(/%%s/g, '%s');\r\n      }\r\n\r\n    };\r\n\r\n    return i18n;\r\n});\ndefine('skylark-simditor/Button',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-jquery\",\r\n  \"./Simditor\",\r\n  \"./i18n\"\r\n],function(langx, $,Simditor,i18n){ \r\n  var slice = [].slice;\r\n\r\n  var Button = langx.Evented.inherit( {\r\n    init : function(opts) {\r\n      this.toolbar = opts.toolbar;\r\n      this.editor = opts.toolbar.editor;\r\n      this.title = i18n.translate(this.name);\r\n      this._init();\r\n    }\r\n  }); \r\n\r\n  Button.prototype._tpl = {\r\n    item: '<li><a tabindex=\"-1\" unselectable=\"on\" class=\"toolbar-item\" href=\"javascript:;\"><span></span></a></li>',\r\n    menuWrapper: '<div class=\"toolbar-menu\"></div>',\r\n    menuItem: '<li><a tabindex=\"-1\" unselectable=\"on\" class=\"menu-item\" href=\"javascript:;\"><span></span></a></li>',\r\n    separator: '<li><span class=\"separator\"></span></li>'\r\n  };\r\n\r\n  Button.prototype.name = '';\r\n\r\n  Button.prototype.icon = '';\r\n\r\n  Button.prototype.title = '';\r\n\r\n  Button.prototype.text = '';\r\n\r\n  Button.prototype.htmlTag = '';\r\n\r\n  Button.prototype.disableTag = '';\r\n\r\n  Button.prototype.menu = false;\r\n\r\n  Button.prototype.active = false;\r\n\r\n  Button.prototype.disabled = false;\r\n\r\n  Button.prototype.needFocus = true;\r\n\r\n  Button.prototype.shortcut = null;\r\n\r\n\r\n  Button.prototype._init = function() {\r\n    var k, len, ref, tag;\r\n    this.render();\r\n    this.el.on('mousedown', (function(_this) {\r\n      return function(e) {\r\n        var exceed, noFocus, param;\r\n        e.preventDefault();\r\n        noFocus = _this.needFocus && !_this.editor.inputManager.focused;\r\n        if (_this.el.hasClass('disabled')) {\r\n          return false;\r\n        }\r\n        if (noFocus) {\r\n          _this.editor.focus();\r\n        }\r\n        if (_this.menu) {\r\n          _this.wrapper.toggleClass('menu-on').siblings('li').removeClass('menu-on');\r\n          if (_this.wrapper.is('.menu-on')) {\r\n            exceed = _this.menuWrapper.offset().left + _this.menuWrapper.outerWidth() + 5 - _this.editor.wrapper.offset().left - _this.editor.wrapper.outerWidth();\r\n            if (exceed > 0) {\r\n              _this.menuWrapper.css({\r\n                'left': 'auto',\r\n                'right': 0\r\n              });\r\n            }\r\n            _this.trigger('menuexpand');\r\n          }\r\n          return false;\r\n        }\r\n        param = _this.el.data('param');\r\n        _this.command(param);\r\n        return false;\r\n      };\r\n    })(this));\r\n    this.wrapper.on('click', 'a.menu-item', (function(_this) {\r\n      return function(e) {\r\n        var btn, noFocus, param;\r\n        e.preventDefault();\r\n        btn = $(e.currentTarget);\r\n        _this.wrapper.removeClass('menu-on');\r\n        noFocus = _this.needFocus && !_this.editor.inputManager.focused;\r\n        if (btn.hasClass('disabled') || noFocus) {\r\n          return false;\r\n        }\r\n        _this.toolbar.wrapper.removeClass('menu-on');\r\n        param = btn.data('param');\r\n        _this.command(param);\r\n        return false;\r\n      };\r\n    })(this));\r\n    this.wrapper.on('mousedown', 'a.menu-item', function(e) {\r\n      return false;\r\n    });\r\n    this.editor.on('blur', (function(_this) {\r\n      return function() {\r\n        var editorActive;\r\n        editorActive = _this.editor.body.is(':visible') && _this.editor.body.is('[contenteditable]');\r\n        if (!(editorActive && !_this.editor.clipboard.pasting)) {\r\n          return;\r\n        }\r\n        _this.setActive(false);\r\n        return _this.setDisabled(false);\r\n      };\r\n    })(this));\r\n    if (this.shortcut != null) {\r\n      this.editor.hotkeys.add(this.shortcut, (function(_this) {\r\n        return function(e) {\r\n          _this.el.mousedown();\r\n          return false;\r\n        };\r\n      })(this));\r\n    }\r\n    ref = this.htmlTag.split(',');\r\n    for (k = 0, len = ref.length; k < len; k++) {\r\n      tag = ref[k];\r\n      tag = langx.trim(tag);\r\n      if (tag && langx.inArray(tag, this.editor.formatter._allowedTags) < 0) {\r\n        this.editor.formatter._allowedTags.push(tag);\r\n      }\r\n    }\r\n    return this.editor.on('selectionchanged', (function(_this) {\r\n      return function(e) {\r\n        if (_this.editor.inputManager.focused) {\r\n          return _this._status();\r\n        }\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  Button.prototype.iconClassOf = function(icon) {\r\n    if (icon) {\r\n      return \"simditor-icon simditor-icon-\" + icon;\r\n    } else {\r\n      return '';\r\n    }\r\n  };\r\n\r\n  Button.prototype.setIcon = function(icon) {\r\n    return this.el.find('span').removeClass().addClass(this.iconClassOf(icon)).text(this.text);\r\n  };\r\n\r\n  Button.prototype.render = function() {\r\n    this.wrapper = $(this._tpl.item).appendTo(this.toolbar.list);\r\n    this.el = this.wrapper.find('a.toolbar-item');\r\n    this.el.attr('title', this.title).addClass(\"toolbar-item-\" + this.name).data('button', this);\r\n    this.setIcon(this.icon);\r\n    if (!this.menu) {\r\n      return;\r\n    }\r\n    this.menuWrapper = $(this._tpl.menuWrapper).appendTo(this.wrapper);\r\n    this.menuWrapper.addClass(\"toolbar-menu-\" + this.name);\r\n    return this.renderMenu();\r\n  };\r\n\r\n  Button.prototype.renderMenu = function() {\r\n    var $menuBtnEl, $menuItemEl, k, len, menuItem, ref, ref1, results;\r\n    if (!langx.isArray(this.menu)) {\r\n      return;\r\n    }\r\n    this.menuEl = $('<ul/>').appendTo(this.menuWrapper);\r\n    ref = this.menu;\r\n    results = [];\r\n    for (k = 0, len = ref.length; k < len; k++) {\r\n      menuItem = ref[k];\r\n      if (menuItem === '|') {\r\n        $(this._tpl.separator).appendTo(this.menuEl);\r\n        continue;\r\n      }\r\n      $menuItemEl = $(this._tpl.menuItem).appendTo(this.menuEl);\r\n      $menuBtnEl = $menuItemEl.find('a.menu-item').attr({\r\n        'title': (ref1 = menuItem.title) != null ? ref1 : menuItem.text,\r\n        'data-param': menuItem.param\r\n      }).addClass('menu-item-' + menuItem.name);\r\n      if (menuItem.icon) {\r\n        results.push($menuBtnEl.find('span').addClass(this.iconClassOf(menuItem.icon)));\r\n      } else {\r\n        results.push($menuBtnEl.find('span').text(menuItem.text));\r\n      }\r\n    }\r\n    return results;\r\n  };\r\n\r\n  Button.prototype.setActive = function(active) {\r\n    if (active === this.active) {\r\n      return;\r\n    }\r\n    this.active = active;\r\n    return this.el.toggleClass('active', this.active);\r\n  };\r\n\r\n  Button.prototype.setDisabled = function(disabled) {\r\n    if (disabled === this.disabled) {\r\n      return;\r\n    }\r\n    this.disabled = disabled;\r\n    return this.el.toggleClass('disabled', this.disabled);\r\n  };\r\n\r\n  Button.prototype._disableStatus = function() {\r\n    var disabled, endNodes, startNodes;\r\n    startNodes = this.editor.selection.startNodes();\r\n    endNodes = this.editor.selection.endNodes();\r\n    disabled = startNodes.filter(this.disableTag).length > 0 || endNodes.filter(this.disableTag).length > 0;\r\n    this.setDisabled(disabled);\r\n    if (this.disabled) {\r\n      this.setActive(false);\r\n    }\r\n    return this.disabled;\r\n  };\r\n\r\n  Button.prototype._activeStatus = function() {\r\n    var active, endNode, endNodes, startNode, startNodes;\r\n    startNodes = this.editor.selection.startNodes();\r\n    endNodes = this.editor.selection.endNodes();\r\n    startNode = startNodes.filter(this.htmlTag);\r\n    endNode = endNodes.filter(this.htmlTag);\r\n    active = startNode.length > 0 && endNode.length > 0 && startNode.is(endNode);\r\n    this.node = active ? startNode : null;\r\n    this.setActive(active);\r\n    return this.active;\r\n  };\r\n\r\n  Button.prototype._status = function() {\r\n    this._disableStatus();\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n    return this._activeStatus();\r\n  };\r\n\r\n  Button.prototype.command = function(param) {};\r\n\r\n  Button.prototype._t = i18n.translate;\r\n  \r\n\r\n  Simditor.Button = Button;\r\n\r\n  return Button;\r\n});\ndefine('skylark-simditor/Popover',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-jquery\",\r\n  \"./Simditor\",\r\n  \"./i18n\"\r\n],function(langx,$,Simditor,i18n){ \r\n\r\n  var Popover = langx.Evented.inherit({\r\n     init : function(opts) {\r\n      this.button = opts.button;\r\n      this.editor = opts.button.editor;\r\n      this._init();\r\n    }\r\n  });\r\n\r\n\r\n  Popover.prototype.offset = {\r\n    top: 4,\r\n    left: 0\r\n  };\r\n\r\n  Popover.prototype.target = null;\r\n\r\n  Popover.prototype.active = false;\r\n\r\n  Popover.prototype._init = function() {\r\n    this.el = $('<div class=\"simditor-popover\"></div>').appendTo(this.editor.el).data('popover', this);\r\n    this.render();\r\n    this.el.on('mouseenter', (function(_this) {\r\n      return function(e) {\r\n        return _this.el.addClass('hover');\r\n      };\r\n    })(this));\r\n    return this.el.on('mouseleave', (function(_this) {\r\n      return function(e) {\r\n        return _this.el.removeClass('hover');\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  Popover.prototype.render = function() {};\r\n\r\n  Popover.prototype._initLabelWidth = function() {\r\n    var $fields;\r\n    $fields = this.el.find('.settings-field');\r\n    if (!($fields.length > 0)) {\r\n      return;\r\n    }\r\n    this._labelWidth = 0;\r\n    $fields.each((function(_this) {\r\n      return function(i, field) {\r\n        var $field, $label;\r\n        $field = $(field);\r\n        $label = $field.find('label');\r\n        if (!($label.length > 0)) {\r\n          return;\r\n        }\r\n        return _this._labelWidth = Math.max(_this._labelWidth, $label.width());\r\n      };\r\n    })(this));\r\n    return $fields.find('label').width(this._labelWidth);\r\n  };\r\n\r\n  Popover.prototype.show = function($target, position) {\r\n    if (position == null) {\r\n      position = 'bottom';\r\n    }\r\n    if ($target == null) {\r\n      return;\r\n    }\r\n    this.el.siblings('.simditor-popover').each(function(i, popover) {\r\n      popover = $(popover).data('popover');\r\n      if (popover.active) {\r\n        return popover.hide();\r\n      }\r\n    });\r\n    if (this.active && this.target) {\r\n      this.target.removeClass('selected');\r\n    }\r\n    this.target = $target.addClass('selected');\r\n    if (this.active) {\r\n      this.refresh(position);\r\n      return this.trigger('popovershow');\r\n    } else {\r\n      this.active = true;\r\n      this.el.css({\r\n        left: -9999\r\n      }).show();\r\n      if (!this._labelWidth) {\r\n        this._initLabelWidth();\r\n      }\r\n      this.editor.util.reflow();\r\n      this.refresh(position);\r\n      return this.trigger('popovershow');\r\n    }\r\n  };\r\n\r\n  Popover.prototype.hide = function() {\r\n    if (!this.active) {\r\n      return;\r\n    }\r\n    if (this.target) {\r\n      this.target.removeClass('selected');\r\n    }\r\n    this.target = null;\r\n    this.active = false;\r\n    this.el.hide();\r\n    return this.trigger('popoverhide');\r\n  };\r\n\r\n  Popover.prototype.refresh = function(position) {\r\n    var editorOffset, left, maxLeft, targetH, targetOffset, top;\r\n    if (position == null) {\r\n      position = 'bottom';\r\n    }\r\n    if (!this.active) {\r\n      return;\r\n    }\r\n    editorOffset = this.editor.el.offset();\r\n    targetOffset = this.target.offset();\r\n    targetH = this.target.outerHeight();\r\n    if (position === 'bottom') {\r\n      top = targetOffset.top - editorOffset.top + targetH;\r\n    } else if (position === 'top') {\r\n      top = targetOffset.top - editorOffset.top - this.el.height();\r\n    }\r\n    maxLeft = this.editor.wrapper.width() - this.el.outerWidth() - 10;\r\n    left = Math.min(targetOffset.left - editorOffset.left, maxLeft);\r\n    return this.el.css({\r\n      top: top + this.offset.top,\r\n      left: left + this.offset.left\r\n    });\r\n  };\r\n\r\n  Popover.prototype.destroy = function() {\r\n    this.target = null;\r\n    this.active = false;\r\n    this.editor.off('.linkpopover');\r\n    return this.el.remove();\r\n  };\r\n\r\n  Popover.prototype._t = function(name) {\r\n    var args, ref, result;\r\n    args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n    result = i18n.translate.apply(i18n, args);\r\n    return result;\r\n  };\r\n\r\n  Simditor.Popover = Popover;\r\n\r\n  return Popover;\r\n\r\n\t\r\n});\ndefine('skylark-simditor/Toolbar',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-jquery\"\r\n],function(langx,$){ \r\n\r\n  var Toolbar = langx.Evented.inherit({\r\n    init : function(editor,opts) {\r\n      var floatInitialized, initToolbarFloat, toolbarHeight;\r\n      this.editor = editor;\r\n\r\n      this.opts = langx.extend({}, this.opts, opts);\r\n\r\n      if (!this.opts.toolbar) {\r\n        return;\r\n      }\r\n      if (!langx.isArray(this.opts.toolbar)) {\r\n        this.opts.toolbar = ['bold', 'italic', 'underline', 'strikethrough', '|', 'ol', 'ul', 'blockquote', 'code', '|', 'link', 'image', '|', 'indent', 'outdent'];\r\n      }\r\n      this._render();\r\n      this.list.on('click', function(e) {\r\n        return false;\r\n      });\r\n      this.wrapper.on('mousedown', (function(_this) {\r\n        return function(e) {\r\n          return _this.list.find('.menu-on').removeClass('.menu-on');\r\n        };\r\n      })(this));\r\n      $(document).on('mousedown.simditor' + this.editor.id, (function(_this) {\r\n        return function(e) {\r\n          return _this.list.find('.menu-on').removeClass('.menu-on');\r\n        };\r\n      })(this));\r\n      if (!this.opts.toolbarHidden && this.opts.toolbarFloat) {\r\n        this.wrapper.css('top', this.opts.toolbarFloatOffset);\r\n        toolbarHeight = 0;\r\n        initToolbarFloat = (function(_this) {\r\n          return function() {\r\n            _this.wrapper.css('position', 'static');\r\n            _this.wrapper.width('auto');\r\n            _this.editor.util.reflow(_this.wrapper);\r\n            _this.wrapper.width(_this.wrapper.outerWidth());\r\n            _this.wrapper.css('left', _this.editor.util.os.mobile ? _this.wrapper.position().left : _this.wrapper.offset().left);\r\n            _this.wrapper.css('position', '');\r\n            toolbarHeight = _this.wrapper.outerHeight();\r\n            _this.editor.placeholderEl.css('top', toolbarHeight);\r\n            return true;\r\n          };\r\n        })(this);\r\n        floatInitialized = null;\r\n        $(window).on('resize.simditor-' + this.editor.id, function(e) {\r\n          return floatInitialized = initToolbarFloat();\r\n        });\r\n        $(window).on('scroll.simditor-' + this.editor.id, (function(_this) {\r\n          return function(e) {\r\n            var bottomEdge, scrollTop, topEdge;\r\n            if (!_this.wrapper.is(':visible')) {\r\n              return;\r\n            }\r\n            topEdge = _this.editor.wrapper.offset().top;\r\n            bottomEdge = topEdge + _this.editor.wrapper.outerHeight() - 80;\r\n            scrollTop = $(document).scrollTop() + _this.opts.toolbarFloatOffset;\r\n            if (scrollTop <= topEdge || scrollTop >= bottomEdge) {\r\n              _this.editor.wrapper.removeClass('toolbar-floating').css('padding-top', '');\r\n              if (_this.editor.util.os.mobile) {\r\n                return _this.wrapper.css('top', _this.opts.toolbarFloatOffset);\r\n              }\r\n            } else {\r\n              floatInitialized || (floatInitialized = initToolbarFloat());\r\n              _this.editor.wrapper.addClass('toolbar-floating').css('padding-top', toolbarHeight);\r\n              if (_this.editor.util.os.mobile) {\r\n                return _this.wrapper.css('top', scrollTop - topEdge + _this.opts.toolbarFloatOffset);\r\n              }\r\n            }\r\n          };\r\n        })(this));\r\n      }\r\n      this.editor.on('destroy', (function(_this) {\r\n        return function() {\r\n          return _this.buttons.length = 0;\r\n        };\r\n      })(this));\r\n      $(document).on(\"mousedown.simditor-\" + this.editor.id, (function(_this) {\r\n        return function(e) {\r\n          return _this.list.find('li.menu-on').removeClass('menu-on');\r\n        };\r\n      })(this));\r\n    }\r\n\r\n  });\r\n\r\n  Toolbar.pluginName = 'Toolbar';\r\n\r\n  Toolbar.prototype.opts = {\r\n    toolbar: true,\r\n    toolbarFloat: true,\r\n    toolbarHidden: false,\r\n    toolbarFloatOffset: 0\r\n  };\r\n\r\n  Toolbar.prototype._tpl = {\r\n    wrapper: '<div class=\"simditor-toolbar\"><ul></ul></div>',\r\n    separator: '<li><span class=\"separator\"></span></li>'\r\n  };\r\n\r\n\r\n  Toolbar.prototype._render = function() {\r\n    var k, len, name, ref;\r\n    this.buttons = [];\r\n    this.wrapper = $(this._tpl.wrapper).prependTo(this.editor.wrapper);\r\n    this.list = this.wrapper.find('ul');\r\n    ref = this.opts.toolbar;\r\n    for (k = 0, len = ref.length; k < len; k++) {\r\n      name = ref[k];\r\n      if (name === '|') {\r\n        $(this._tpl.separator).appendTo(this.list);\r\n        continue;\r\n      }\r\n      if (!this.constructor.buttons[name]) {\r\n        throw new Error(\"simditor: invalid toolbar button \" + name);\r\n        continue;\r\n      }\r\n      this.buttons.push(new this.constructor.buttons[name]({\r\n        toolbar : this,\r\n        editor: this.editor\r\n      }));\r\n    }\r\n    if (this.opts.toolbarHidden) {\r\n      return this.wrapper.hide();\r\n    }\r\n  };\r\n\r\n  Toolbar.prototype.findButton = function(name) {\r\n    var button;\r\n    button = this.list.find('.toolbar-item-' + name).data('button');\r\n    return button != null ? button : null;\r\n  };\r\n\r\n  Toolbar.addButton = function(btn) {\r\n    return this.buttons[btn.prototype.name] = btn;\r\n  };\r\n\r\n  Toolbar.buttons = {};\r\n\r\n  return Toolbar;\r\n\r\n});\ndefine('skylark-simditor/buttons/AlignmentButton',[\r\n  \"skylark-jquery\",\r\n  \"../Toolbar\",\r\n  \"../Simditor\",\r\n  \"../Button\"\r\n],function($,Toolbar,Simditor,Button){ \r\n   var AlignmentButton = Button.inherit({\r\n\r\n    });\r\n\r\n\r\n  AlignmentButton.prototype.name = \"alignment\";\r\n\r\n  AlignmentButton.prototype.icon = 'align-left';\r\n\r\n  AlignmentButton.prototype.htmlTag = 'p, h1, h2, h3, h4, td, th';\r\n\r\n  AlignmentButton.prototype._init = function() {\r\n    this.menu = [\r\n      {\r\n        name: 'left',\r\n        text: this._t('alignLeft'),\r\n        icon: 'align-left',\r\n        param: 'left'\r\n      }, {\r\n        name: 'center',\r\n        text: this._t('alignCenter'),\r\n        icon: 'align-center',\r\n        param: 'center'\r\n      }, {\r\n        name: 'right',\r\n        text: this._t('alignRight'),\r\n        icon: 'align-right',\r\n        param: 'right'\r\n      }\r\n    ];\r\n    return Button.prototype._init.call(this);\r\n  };\r\n\r\n  AlignmentButton.prototype.setActive = function(active, align) {\r\n    if (align == null) {\r\n      align = 'left';\r\n    }\r\n    if (align !== 'left' && align !== 'center' && align !== 'right') {\r\n      align = 'left';\r\n    }\r\n    if (align === 'left') {\r\n      Button.prototype.setActive.call(this, false);\r\n    } else {\r\n      Button.prototype.setActive.call(this, active);\r\n    }\r\n    this.el.removeClass('align-left align-center align-right');\r\n    if (active) {\r\n      this.el.addClass('align-' + align);\r\n    }\r\n    this.setIcon('align-' + align);\r\n    return this.menuEl.find('.menu-item').show().end().find('.menu-item-' + align).hide();\r\n  };\r\n\r\n  AlignmentButton.prototype._status = function() {\r\n    this.nodes = this.editor.selection.nodes().filter(this.htmlTag);\r\n    if (this.nodes.length < 1) {\r\n      this.setDisabled(true);\r\n      return this.setActive(false);\r\n    } else {\r\n      this.setDisabled(false);\r\n      return this.setActive(true, this.nodes.first().css('text-align'));\r\n    }\r\n  };\r\n\r\n  AlignmentButton.prototype.command = function(align) {\r\n    if (align !== 'left' && align !== 'center' && align !== 'right') {\r\n      throw new Error(\"simditor alignment button: invalid align \" + align);\r\n    }\r\n    this.nodes.css({\r\n      'text-align': align === 'left' ? '' : align\r\n    });\r\n    this.editor.trigger('valuechanged');\r\n    return this.editor.inputManager.throttledSelectionChanged();\r\n  };\r\n\r\n  Simditor.Toolbar.addButton(AlignmentButton);\r\n\r\n  return AlignmentButton;\r\n\r\n});\ndefine('skylark-simditor/buttons/BlockquoteButton',[\r\n  \"skylark-jquery\",\r\n  \"../Toolbar\",\r\n  \"../Simditor\",\r\n  \"../Button\"\r\n],function($,Toolbar,Simditor,Button){ \r\n   var BlockquoteButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n\r\n  BlockquoteButton.prototype.name = 'blockquote';\r\n\r\n  BlockquoteButton.prototype.icon = 'quote-left';\r\n\r\n  BlockquoteButton.prototype.htmlTag = 'blockquote';\r\n\r\n  BlockquoteButton.prototype.disableTag = 'pre, table';\r\n\r\n  BlockquoteButton.prototype.command = function() {\r\n    var $rootNodes, clearCache, nodeCache;\r\n    $rootNodes = this.editor.selection.rootNodes();\r\n    $rootNodes = $rootNodes.filter(function(i, node) {\r\n      return !$(node).parent().is('blockquote');\r\n    });\r\n    this.editor.selection.save();\r\n    nodeCache = [];\r\n    clearCache = (function(_this) {\r\n      return function() {\r\n        if (nodeCache.length > 0) {\r\n          $(\"<\" + _this.htmlTag + \"/>\").insertBefore(nodeCache[0]).append(nodeCache);\r\n          return nodeCache.length = 0;\r\n        }\r\n      };\r\n    })(this);\r\n    $rootNodes.each((function(_this) {\r\n      return function(i, node) {\r\n        var $node;\r\n        $node = $(node);\r\n        if (!$node.parent().is(_this.editor.body)) {\r\n          return;\r\n        }\r\n        if ($node.is(_this.htmlTag)) {\r\n          clearCache();\r\n          return $node.children().unwrap();\r\n        } else if ($node.is(_this.disableTag) || _this.editor.util.isDecoratedNode($node)) {\r\n          return clearCache();\r\n        } else {\r\n          return nodeCache.push(node);\r\n        }\r\n      };\r\n    })(this));\r\n    clearCache();\r\n    this.editor.selection.restore();\r\n    return this.editor.trigger('valuechanged');\r\n  };\r\n\r\n  Simditor.Toolbar.addButton(BlockquoteButton); \r\n\r\n  return BlockquoteButton;\r\n\r\n});\ndefine('skylark-simditor/buttons/BoldButton',[\r\n  \"skylark-jquery\",\r\n  \"../Toolbar\",\r\n  \"../Simditor\",\r\n  \"../Button\"\r\n],function($,Toolbar,Simditor,Button){ \r\n  \r\n    var BoldButton = Button.inherit({\r\n\r\n    });\r\n\r\n    BoldButton.prototype.name = 'bold';\r\n\r\n    BoldButton.prototype.icon = 'bold';\r\n\r\n    BoldButton.prototype.htmlTag = 'b, strong';\r\n\r\n    BoldButton.prototype.disableTag = 'pre';\r\n\r\n    BoldButton.prototype.shortcut = 'cmd+b';\r\n\r\n    BoldButton.prototype._init = function() {\r\n      if (this.editor.util.os.mac) {\r\n        this.title = this.title + ' ( Cmd + b )';\r\n      } else {\r\n        this.title = this.title + ' ( Ctrl + b )';\r\n        this.shortcut = 'ctrl+b';\r\n      }\r\n      return Button.prototype._init.call(this);\r\n    };\r\n\r\n    BoldButton.prototype._activeStatus = function() {\r\n      var active;\r\n      active = document.queryCommandState('bold') === true;\r\n      this.setActive(active);\r\n      return this.active;\r\n    };\r\n\r\n    BoldButton.prototype.command = function() {\r\n      document.execCommand('bold');\r\n      if (!this.editor.util.support.oninput) {\r\n        this.editor.trigger('valuechanged');\r\n      }\r\n      return $(document).trigger('selectionchange');\r\n    };\r\n\r\n\r\n    Simditor.Toolbar.addButton(BoldButton);\r\n\r\n    return BoldButton;\r\n\r\n});\ndefine('skylark-simditor/buttons/CodePopover',[\r\n  \"skylark-jquery\",\r\n  \"../Toolbar\",\r\n  \"../Simditor\",\r\n  \"../Popover\"\r\n],function($,Toolbar,Simditor,Popover){ \r\n  \r\n   var CodePopover = Popover.inherit({\r\n\r\n   });\r\n\r\n  CodePopover.prototype.render = function() {\r\n    var $option, k, lang, len, ref;\r\n    this._tpl = \"<div class=\\\"code-settings\\\">\\n  <div class=\\\"settings-field\\\">\\n    <select class=\\\"select-lang\\\">\\n      <option value=\\\"-1\\\">\" + (this._t('selectLanguage')) + \"</option>\\n    </select>\\n  </div>\\n</div>\";\r\n    this.langs = this.editor.opts.codeLanguages || [\r\n      {\r\n        name: 'Bash',\r\n        value: 'bash'\r\n      }, {\r\n        name: 'C++',\r\n        value: 'c++'\r\n      }, {\r\n        name: 'C#',\r\n        value: 'cs'\r\n      }, {\r\n        name: 'CSS',\r\n        value: 'css'\r\n      }, {\r\n        name: 'Erlang',\r\n        value: 'erlang'\r\n      }, {\r\n        name: 'Less',\r\n        value: 'less'\r\n      }, {\r\n        name: 'Sass',\r\n        value: 'sass'\r\n      }, {\r\n        name: 'Diff',\r\n        value: 'diff'\r\n      }, {\r\n        name: 'CoffeeScript',\r\n        value: 'coffeescript'\r\n      }, {\r\n        name: 'HTML,XML',\r\n        value: 'html'\r\n      }, {\r\n        name: 'JSON',\r\n        value: 'json'\r\n      }, {\r\n        name: 'Java',\r\n        value: 'java'\r\n      }, {\r\n        name: 'JavaScript',\r\n        value: 'js'\r\n      }, {\r\n        name: 'Markdown',\r\n        value: 'markdown'\r\n      }, {\r\n        name: 'Objective C',\r\n        value: 'oc'\r\n      }, {\r\n        name: 'PHP',\r\n        value: 'php'\r\n      }, {\r\n        name: 'Perl',\r\n        value: 'parl'\r\n      }, {\r\n        name: 'Python',\r\n        value: 'python'\r\n      }, {\r\n        name: 'Ruby',\r\n        value: 'ruby'\r\n      }, {\r\n        name: 'SQL',\r\n        value: 'sql'\r\n      }\r\n    ];\r\n    this.el.addClass('code-popover').append(this._tpl);\r\n    this.selectEl = this.el.find('.select-lang');\r\n    ref = this.langs;\r\n    for (k = 0, len = ref.length; k < len; k++) {\r\n      lang = ref[k];\r\n      $option = $('<option/>', {\r\n        text: lang.name,\r\n        value: lang.value\r\n      }).appendTo(this.selectEl);\r\n    }\r\n    this.selectEl.on('change', (function(_this) {\r\n      return function(e) {\r\n        var selected;\r\n        _this.lang = _this.selectEl.val();\r\n        selected = _this.target.hasClass('selected');\r\n        _this.target.removeClass().removeAttr('data-lang');\r\n        if (_this.lang !== -1) {\r\n          _this.target.attr('data-lang', _this.lang);\r\n        }\r\n        if (selected) {\r\n          _this.target.addClass('selected');\r\n        }\r\n        return _this.editor.trigger('valuechanged');\r\n      };\r\n    })(this));\r\n    return this.editor.on('valuechanged', (function(_this) {\r\n      return function(e) {\r\n        if (_this.active) {\r\n          return _this.refresh();\r\n        }\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  CodePopover.prototype.show = function() {\r\n    var args;\r\n    args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n    Popover.prototype.show.apply(this, args);\r\n    this.lang = this.target.attr('data-lang');\r\n    if (this.lang != null) {\r\n      return this.selectEl.val(this.lang);\r\n    } else {\r\n      return this.selectEl.val(-1);\r\n    }\r\n  };\r\n\r\n  return CodePopover;\r\n\r\n});\ndefine('skylark-simditor/buttons/CodeButton',[\r\n  \"skylark-jquery\",\r\n  \"../Toolbar\",\r\n  \"../Simditor\",\r\n  \"../Button\",\r\n  \"./CodePopover\"\r\n],function($,Toolbar,Simditor,Button,CodePopover){ \r\n  \r\n\r\n   var CodeButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n\r\n  CodeButton.prototype.name = 'code';\r\n\r\n  CodeButton.prototype.icon = 'code';\r\n\r\n  CodeButton.prototype.htmlTag = 'pre';\r\n\r\n  CodeButton.prototype.disableTag = 'ul, ol, table';\r\n\r\n  CodeButton.prototype._init = function() {\r\n    Button.prototype._init.call(this);\r\n    this.editor.on('decorate', (function(_this) {\r\n      return function(e, $el) {\r\n        return $el.find('pre').each(function(i, pre) {\r\n          return _this.decorate($(pre));\r\n        });\r\n      };\r\n    })(this));\r\n    return this.editor.on('undecorate', (function(_this) {\r\n      return function(e, $el) {\r\n        return $el.find('pre').each(function(i, pre) {\r\n          return _this.undecorate($(pre));\r\n        });\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  CodeButton.prototype.render = function() {\r\n    var args;\r\n    args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n    Button.prototype.render.apply(this, args);\r\n    return this.popover = new CodePopover({\r\n      button: this\r\n    });\r\n  };\r\n\r\n  CodeButton.prototype._checkMode = function() {\r\n    var $blockNodes, range;\r\n    range = this.editor.selection.range();\r\n    if (($blockNodes = $(range.cloneContents()).find(this.editor.util.blockNodes.join(','))) > 0 || (range.collapsed && this.editor.selection.startNodes().filter('code').length === 0)) {\r\n      this.inlineMode = false;\r\n      return this.htmlTag = 'pre';\r\n    } else {\r\n      this.inlineMode = true;\r\n      return this.htmlTag = 'code';\r\n    }\r\n  };\r\n\r\n  CodeButton.prototype._status = function() {\r\n    this._checkMode();\r\n    Button.prototype._status.call(this);\r\n    if (this.inlineMode) {\r\n      return;\r\n    }\r\n    if (this.active) {\r\n      return this.popover.show(this.node);\r\n    } else {\r\n      return this.popover.hide();\r\n    }\r\n  };\r\n\r\n  CodeButton.prototype.decorate = function($pre) {\r\n    var $code, lang, ref, ref1;\r\n    $code = $pre.find('> code');\r\n    if ($code.length > 0) {\r\n      lang = (ref = $code.attr('class')) != null ? (ref1 = ref.match(/lang-(\\S+)/)) != null ? ref1[1] : void 0 : void 0;\r\n      $code.contents().unwrap();\r\n      if (lang) {\r\n        return $pre.attr('data-lang', lang);\r\n      }\r\n    }\r\n  };\r\n\r\n  CodeButton.prototype.undecorate = function($pre) {\r\n    var $code, lang;\r\n    lang = $pre.attr('data-lang');\r\n    $code = $('<code/>');\r\n    if (lang && lang !== -1) {\r\n      $code.addClass('lang-' + lang);\r\n    }\r\n    return $pre.wrapInner($code).removeAttr('data-lang');\r\n  };\r\n\r\n  CodeButton.prototype.command = function() {\r\n    if (this.inlineMode) {\r\n      return this._inlineCommand();\r\n    } else {\r\n      return this._blockCommand();\r\n    }\r\n  };\r\n\r\n  CodeButton.prototype._blockCommand = function() {\r\n    var $rootNodes, clearCache, nodeCache, resultNodes;\r\n    $rootNodes = this.editor.selection.rootNodes();\r\n    nodeCache = [];\r\n    resultNodes = [];\r\n    clearCache = (function(_this) {\r\n      return function() {\r\n        var $pre;\r\n        if (!(nodeCache.length > 0)) {\r\n          return;\r\n        }\r\n        $pre = $(\"<\" + _this.htmlTag + \"/>\").insertBefore(nodeCache[0]).text(_this.editor.formatter.clearHtml(nodeCache));\r\n        resultNodes.push($pre[0]);\r\n        return nodeCache.length = 0;\r\n      };\r\n    })(this);\r\n    $rootNodes.each((function(_this) {\r\n      return function(i, node) {\r\n        var $node, $p;\r\n        $node = $(node);\r\n        if ($node.is(_this.htmlTag)) {\r\n          clearCache();\r\n          $p = $('<p/>').append($node.html().replace('\\n', '<br/>')).replaceAll($node);\r\n          return resultNodes.push($p[0]);\r\n        } else if ($node.is(_this.disableTag) || _this.editor.util.isDecoratedNode($node) || $node.is('blockquote')) {\r\n          return clearCache();\r\n        } else {\r\n          return nodeCache.push(node);\r\n        }\r\n      };\r\n    })(this));\r\n    clearCache();\r\n    this.editor.selection.setRangeAtEndOf($(resultNodes).last());\r\n    return this.editor.trigger('valuechanged');\r\n  };\r\n\r\n  CodeButton.prototype._inlineCommand = function() {\r\n    var $code, $contents, range;\r\n    range = this.editor.selection.range();\r\n    if (this.active) {\r\n      range.selectNodeContents(this.node[0]);\r\n      this.editor.selection.save(range);\r\n      this.node.contents().unwrap();\r\n      this.editor.selection.restore();\r\n    } else {\r\n      $contents = $(range.extractContents());\r\n      $code = $(\"<\" + this.htmlTag + \"/>\").append($contents.contents());\r\n      range.insertNode($code[0]);\r\n      range.selectNodeContents($code[0]);\r\n      this.editor.selection.range(range);\r\n    }\r\n    return this.editor.trigger('valuechanged');\r\n  };\r\n\r\n  Simditor.Toolbar.addButton(CodeButton);    \r\n\r\n  return CodeButton;\r\n\r\n});\ndefine('skylark-simditor/buttons/ColorButton',[\r\n  \"skylark-jquery\",\r\n  \"../Toolbar\",\r\n  \"../Simditor\",\r\n  \"../Button\"\r\n],function($,Toolbar,Simditor,Button){ \r\n  \r\n\r\n   var ColorButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n  ColorButton.prototype.name = 'color';\r\n\r\n  ColorButton.prototype.icon = 'tint';\r\n\r\n  ColorButton.prototype.disableTag = 'pre';\r\n\r\n  ColorButton.prototype.menu = true;\r\n\r\n  ColorButton.prototype.render = function() {\r\n    var args;\r\n    args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n    return Button.prototype.render.apply(this, args);\r\n  };\r\n\r\n  ColorButton.prototype.renderMenu = function() {\r\n    $('<ul class=\"color-list\">\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-1\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-2\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-3\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-4\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-5\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-6\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-7\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-default\"></a></li>\\n</ul>').appendTo(this.menuWrapper);\r\n    this.menuWrapper.on('mousedown', '.color-list', function(e) {\r\n      return false;\r\n    });\r\n    return this.menuWrapper.on('click', '.font-color', (function(_this) {\r\n      return function(e) {\r\n        var $link, $p, hex, range, rgb, textNode;\r\n        _this.wrapper.removeClass('menu-on');\r\n        $link = $(e.currentTarget);\r\n        if ($link.hasClass('font-color-default')) {\r\n          $p = _this.editor.body.find('p, li');\r\n          if (!($p.length > 0)) {\r\n            return;\r\n          }\r\n          rgb = window.getComputedStyle($p[0], null).getPropertyValue('color');\r\n          hex = _this._convertRgbToHex(rgb);\r\n        } else {\r\n          rgb = window.getComputedStyle($link[0], null).getPropertyValue('background-color');\r\n          hex = _this._convertRgbToHex(rgb);\r\n        }\r\n        if (!hex) {\r\n          return;\r\n        }\r\n        range = _this.editor.selection.range();\r\n        if (!$link.hasClass('font-color-default') && range.collapsed) {\r\n          textNode = document.createTextNode(_this._t('coloredText'));\r\n          range.insertNode(textNode);\r\n          range.selectNodeContents(textNode);\r\n        }\r\n        _this.editor.selection.range(range);\r\n        document.execCommand('styleWithCSS', false, true);\r\n        document.execCommand('foreColor', false, hex);\r\n        document.execCommand('styleWithCSS', false, false);\r\n        if (!_this.editor.util.support.oninput) {\r\n          return _this.editor.trigger('valuechanged');\r\n        }\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  ColorButton.prototype._convertRgbToHex = function(rgb) {\r\n    var match, re, rgbToHex;\r\n    re = /rgb\\((\\d+),\\s?(\\d+),\\s?(\\d+)\\)/g;\r\n    match = re.exec(rgb);\r\n    if (!match) {\r\n      return '';\r\n    }\r\n    rgbToHex = function(r, g, b) {\r\n      var componentToHex;\r\n      componentToHex = function(c) {\r\n        var hex;\r\n        hex = c.toString(16);\r\n        if (hex.length === 1) {\r\n          return '0' + hex;\r\n        } else {\r\n          return hex;\r\n        }\r\n      };\r\n      return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n    };\r\n    return rgbToHex(match[1] * 1, match[2] * 1, match[3] * 1);\r\n  };\r\n\r\n  Simditor.Toolbar.addButton(ColorButton);\r\n\r\n  return ColorButton;\r\n\t\r\n});\ndefine('skylark-simditor/buttons/FontScaleButton',[\r\n  \"skylark-jquery\",\r\n  \"../Toolbar\",\r\n  \"../Simditor\",\r\n  \"../Button\"\r\n],function($,Toolbar,Simditor,Button){ \r\n  \r\n   var FontScaleButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n\r\n  FontScaleButton.prototype.name = 'fontScale';\r\n\r\n  FontScaleButton.prototype.icon = 'font';\r\n\r\n  FontScaleButton.prototype.htmlTag = 'span';\r\n\r\n  FontScaleButton.prototype.disableTag = 'pre, h1, h2, h3, h4, h5';\r\n\r\n  FontScaleButton.prototype.sizeMap = {\r\n    'x-large': '1.5em',\r\n    'large': '1.25em',\r\n    'small': '.75em',\r\n    'x-small': '.5em'\r\n  };\r\n\r\n  FontScaleButton.prototype._init = function() {\r\n    this.menu = [\r\n      {\r\n        name: '150%',\r\n        text: this._t('fontScaleXLarge'),\r\n        param: '5'\r\n      }, {\r\n        name: '125%',\r\n        text: this._t('fontScaleLarge'),\r\n        param: '4'\r\n      }, {\r\n        name: '100%',\r\n        text: this._t('fontScaleNormal'),\r\n        param: '3'\r\n      }, {\r\n        name: '75%',\r\n        text: this._t('fontScaleSmall'),\r\n        param: '2'\r\n      }, {\r\n        name: '50%',\r\n        text: this._t('fontScaleXSmall'),\r\n        param: '1'\r\n      }\r\n    ];\r\n    return Button.prototype._init.call(this);\r\n  };\r\n\r\n  FontScaleButton.prototype._activeStatus = function() {\r\n    var active, endNode, endNodes, range, startNode, startNodes;\r\n    range = this.editor.selection.range();\r\n    startNodes = this.editor.selection.startNodes();\r\n    endNodes = this.editor.selection.endNodes();\r\n    startNode = startNodes.filter('span[style*=\"font-size\"]');\r\n    endNode = endNodes.filter('span[style*=\"font-size\"]');\r\n    active = startNodes.length > 0 && endNodes.length > 0 && startNode.is(endNode);\r\n    this.setActive(active);\r\n    return this.active;\r\n  };\r\n\r\n  FontScaleButton.prototype.command = function(param) {\r\n    var $scales, containerNode, range;\r\n    range = this.editor.selection.range();\r\n    if (range.collapsed) {\r\n      return;\r\n    }\r\n    this.editor.selection.range(range);\r\n    document.execCommand('styleWithCSS', false, true);\r\n    document.execCommand('fontSize', false, param);\r\n    document.execCommand('styleWithCSS', false, false);\r\n    this.editor.selection.reset();\r\n    this.editor.selection.range();\r\n    containerNode = this.editor.selection.containerNode();\r\n    if (containerNode[0].nodeType === Node.TEXT_NODE) {\r\n      $scales = containerNode.closest('span[style*=\"font-size\"]');\r\n    } else {\r\n      $scales = containerNode.find('span[style*=\"font-size\"]');\r\n    }\r\n    $scales.each((function(_this) {\r\n      return function(i, n) {\r\n        var $span, size;\r\n        $span = $(n);\r\n        size = n.style.fontSize;\r\n        if (/large|x-large|small|x-small/.test(size)) {\r\n          return $span.css('fontSize', _this.sizeMap[size]);\r\n        } else if (size === 'medium') {\r\n          if ($span[0].style.length > 1) {\r\n            return $span.css('fontSize', '');\r\n          } else {\r\n            return $span.replaceWith($span.contents());\r\n          }\r\n        }\r\n      };\r\n    })(this));\r\n    return this.editor.trigger('valuechanged');\r\n  };\r\n\r\n  Simditor.Toolbar.addButton(FontScaleButton);\r\n\r\n  return FontScaleButton;\r\n\r\n});\ndefine('skylark-simditor/buttons/HrButton',[\r\n  \"skylark-jquery\",\r\n  \"../Toolbar\",\r\n  \"../Simditor\",\r\n  \"../Button\"\r\n],function($,Toolbar,Simditor,Button){ \r\n  \r\n\r\n   var HrButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n  HrButton.prototype.name = 'hr';\r\n\r\n  HrButton.prototype.icon = 'minus';\r\n\r\n  HrButton.prototype.htmlTag = 'hr';\r\n\r\n  HrButton.prototype._status = function() {};\r\n\r\n  HrButton.prototype.command = function() {\r\n    var $hr, $newBlock, $nextBlock, $rootBlock;\r\n    $rootBlock = this.editor.selection.rootNodes().first();\r\n    $nextBlock = $rootBlock.next();\r\n    if ($nextBlock.length > 0) {\r\n      this.editor.selection.save();\r\n    } else {\r\n      $newBlock = $('<p/>').append(this.editor.util.phBr);\r\n    }\r\n    $hr = $('<hr/>').insertAfter($rootBlock);\r\n    if ($newBlock) {\r\n      $newBlock.insertAfter($hr);\r\n      this.editor.selection.setRangeAtStartOf($newBlock);\r\n    } else {\r\n      this.editor.selection.restore();\r\n    }\r\n    return this.editor.trigger('valuechanged');\r\n  };\r\n\r\n  Simditor.Toolbar.addButton(HrButton);\r\n\r\n  return HrButton;\r\n\t\r\n});\ndefine('skylark-simditor/buttons/ImagePopover',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-jquery\",\r\n  \"../Toolbar\",\r\n  \"../Simditor\",\r\n  \"../Popover\"\r\n],function(langx, $,Toolbar,Simditor,Popover){ \r\n   var ImagePopover = Popover.inherit({\r\n\r\n   });\r\n\r\n  ImagePopover.prototype.offset = {\r\n    top: 6,\r\n    left: -4\r\n  };\r\n\r\n  ImagePopover.prototype.render = function() {\r\n    var tpl;\r\n    tpl = \"<div class=\\\"link-settings\\\">\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('imageUrl')) + \"</label>\\n    <input class=\\\"image-src\\\" type=\\\"text\\\" tabindex=\\\"1\\\" />\\n    <a class=\\\"btn-upload\\\" href=\\\"javascript:;\\\"\\n      title=\\\"\" + (this._t('uploadImage')) + \"\\\" tabindex=\\\"-1\\\">\\n      <span class=\\\"simditor-icon simditor-icon-upload\\\"></span>\\n    </a>\\n  </div>\\n  <div class='settings-field'>\\n    <label>\" + (this._t('imageAlt')) + \"</label>\\n    <input class=\\\"image-alt\\\" id=\\\"image-alt\\\" type=\\\"text\\\" tabindex=\\\"1\\\" />\\n  </div>\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('imageSize')) + \"</label>\\n    <input class=\\\"image-size\\\" id=\\\"image-width\\\" type=\\\"text\\\" tabindex=\\\"2\\\" />\\n    <span class=\\\"times\\\">×</span>\\n    <input class=\\\"image-size\\\" id=\\\"image-height\\\" type=\\\"text\\\" tabindex=\\\"3\\\" />\\n    <a class=\\\"btn-restore\\\" href=\\\"javascript:;\\\"\\n      title=\\\"\" + (this._t('restoreImageSize')) + \"\\\" tabindex=\\\"-1\\\">\\n      <span class=\\\"simditor-icon simditor-icon-undo\\\"></span>\\n    </a>\\n  </div>\\n</div>\";\r\n    this.el.addClass('image-popover').append(tpl);\r\n    this.srcEl = this.el.find('.image-src');\r\n    this.widthEl = this.el.find('#image-width');\r\n    this.heightEl = this.el.find('#image-height');\r\n    this.altEl = this.el.find('#image-alt');\r\n    this.srcEl.on('keydown', (function(_this) {\r\n      return function(e) {\r\n        var range;\r\n        if (!(e.which === 13 && !_this.target.hasClass('uploading'))) {\r\n          return;\r\n        }\r\n        e.preventDefault();\r\n        range = document.createRange();\r\n        _this.button.editor.selection.setRangeAfter(_this.target, range);\r\n        return _this.hide();\r\n      };\r\n    })(this));\r\n    this.srcEl.on('blur', (function(_this) {\r\n      return function(e) {\r\n        return _this._loadImage(_this.srcEl.val());\r\n      };\r\n    })(this));\r\n    this.el.find('.image-size').on('blur', (function(_this) {\r\n      return function(e) {\r\n        _this._resizeImg($(e.currentTarget));\r\n        return _this.el.data('popover').refresh();\r\n      };\r\n    })(this));\r\n    this.el.find('.image-size').on('keyup', (function(_this) {\r\n      return function(e) {\r\n        var inputEl;\r\n        inputEl = $(e.currentTarget);\r\n        if (!(e.which === 13 || e.which === 27 || e.which === 9)) {\r\n          return _this._resizeImg(inputEl, true);\r\n        }\r\n      };\r\n    })(this));\r\n    this.el.find('.image-size').on('keydown', (function(_this) {\r\n      return function(e) {\r\n        var $img, inputEl, range;\r\n        inputEl = $(e.currentTarget);\r\n        if (e.which === 13 || e.which === 27) {\r\n          e.preventDefault();\r\n          if (e.which === 13) {\r\n            _this._resizeImg(inputEl);\r\n          } else {\r\n            _this._restoreImg();\r\n          }\r\n          $img = _this.target;\r\n          _this.hide();\r\n          range = document.createRange();\r\n          return _this.button.editor.selection.setRangeAfter($img, range);\r\n        } else if (e.which === 9) {\r\n          return _this.el.data('popover').refresh();\r\n        }\r\n      };\r\n    })(this));\r\n    this.altEl.on('keydown', (function(_this) {\r\n      return function(e) {\r\n        var range;\r\n        if (e.which === 13) {\r\n          e.preventDefault();\r\n          range = document.createRange();\r\n          _this.button.editor.selection.setRangeAfter(_this.target, range);\r\n          return _this.hide();\r\n        }\r\n      };\r\n    })(this));\r\n    this.altEl.on('keyup', (function(_this) {\r\n      return function(e) {\r\n        if (e.which === 13 || e.which === 27 || e.which === 9) {\r\n          return;\r\n        }\r\n        _this.alt = _this.altEl.val();\r\n        return _this.target.attr('alt', _this.alt);\r\n      };\r\n    })(this));\r\n    this.el.find('.btn-restore').on('click', (function(_this) {\r\n      return function(e) {\r\n        _this._restoreImg();\r\n        return _this.el.data('popover').refresh();\r\n      };\r\n    })(this));\r\n    this.editor.on('valuechanged', (function(_this) {\r\n      return function(e) {\r\n        if (_this.active) {\r\n          return _this.refresh();\r\n        }\r\n      };\r\n    })(this));\r\n    return this._initUploader();\r\n  };\r\n\r\n  ImagePopover.prototype._initUploader = function() {\r\n    var $uploadBtn, createInput;\r\n    $uploadBtn = this.el.find('.btn-upload');\r\n    if (this.editor.uploader == null) {\r\n      $uploadBtn.remove();\r\n      return;\r\n    }\r\n    createInput = (function(_this) {\r\n      return function() {\r\n        if (_this.input) {\r\n          _this.input.remove();\r\n        }\r\n        return _this.input = $('<input/>', {\r\n          type: 'file',\r\n          title: _this._t('uploadImage'),\r\n          multiple: true,\r\n          accept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg'\r\n        }).appendTo($uploadBtn);\r\n      };\r\n    })(this);\r\n    createInput();\r\n    this.el.on('click mousedown', 'input[type=file]', function(e) {\r\n      return e.stopPropagation();\r\n    });\r\n    return this.el.on('change', 'input[type=file]', (function(_this) {\r\n      return function(e) {\r\n        _this.editor.uploader.upload(_this.input, {\r\n          inline: true,\r\n          img: _this.target\r\n        });\r\n        return createInput();\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  ImagePopover.prototype._resizeImg = function(inputEl, onlySetVal) {\r\n    var height, value, width;\r\n    if (onlySetVal == null) {\r\n      onlySetVal = false;\r\n    }\r\n    value = inputEl.val() * 1;\r\n    if (!(this.target && (langx.isNumber(value) || value < 0))) {\r\n      return;\r\n    }\r\n    if (inputEl.is(this.widthEl)) {\r\n      width = value;\r\n      height = this.height * value / this.width;\r\n      this.heightEl.val(height);\r\n    } else {\r\n      height = value;\r\n      width = this.width * value / this.height;\r\n      this.widthEl.val(width);\r\n    }\r\n    if (!onlySetVal) {\r\n      this.target.attr({\r\n        width: width,\r\n        height: height\r\n      });\r\n      return this.editor.trigger('valuechanged');\r\n    }\r\n  };\r\n\r\n  ImagePopover.prototype._restoreImg = function() {\r\n    var ref, size;\r\n    size = ((ref = this.target.data('image-size')) != null ? ref.split(\",\") : void 0) || [this.width, this.height];\r\n    this.target.attr({\r\n      width: size[0] * 1,\r\n      height: size[1] * 1\r\n    });\r\n    this.widthEl.val(size[0]);\r\n    this.heightEl.val(size[1]);\r\n    return this.editor.trigger('valuechanged');\r\n  };\r\n\r\n  ImagePopover.prototype._loadImage = function(src, callback) {\r\n    if (/^data:image/.test(src) && !this.editor.uploader) {\r\n      if (callback) {\r\n        callback(false);\r\n      }\r\n      return;\r\n    }\r\n    if (this.target.attr('src') === src) {\r\n      return;\r\n    }\r\n    return this.button.loadImage(this.target, src, (function(_this) {\r\n      return function(img) {\r\n        var blob;\r\n        if (!img) {\r\n          return;\r\n        }\r\n        if (_this.active) {\r\n          _this.width = img.width;\r\n          _this.height = img.height;\r\n          _this.widthEl.val(_this.width);\r\n          _this.heightEl.val(_this.height);\r\n        }\r\n        if (/^data:image/.test(src)) {\r\n          blob = _this.editor.util.dataURLtoBlob(src);\r\n          blob.name = \"Base64 Image.png\";\r\n          _this.editor.uploader.upload(blob, {\r\n            inline: true,\r\n            img: _this.target\r\n          });\r\n        } else {\r\n          _this.editor.trigger('valuechanged');\r\n        }\r\n        if (callback) {\r\n          return callback(img);\r\n        }\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  ImagePopover.prototype.show = function() {\r\n    var $img, args;\r\n    args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n    Popover.prototype.show.apply(this, args);\r\n    $img = this.target;\r\n    this.width = $img.width();\r\n    this.height = $img.height();\r\n    this.alt = $img.attr('alt');\r\n    if ($img.hasClass('uploading')) {\r\n      return this.srcEl.val(this._t('uploading')).prop('disabled', true);\r\n    } else {\r\n      this.srcEl.val($img.attr('src')).prop('disabled', false);\r\n      this.widthEl.val(this.width);\r\n      this.heightEl.val(this.height);\r\n      return this.altEl.val(this.alt);\r\n    }\r\n  };\r\n\r\n  return ImagePopover;\r\n\r\n});\ndefine('skylark-simditor/buttons/ImageButton',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-jquery\",\r\n  \"../Toolbar\",\r\n  \"../Simditor\",\r\n  \"../Button\",\r\n  \"./ImagePopover\"\r\n],function(langx, $,Toolbar,Simditor,Button,ImagePopover){ \r\n   var ImageButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n  ImageButton.prototype.name = 'image';\r\n\r\n  ImageButton.prototype.icon = 'picture-o';\r\n\r\n  ImageButton.prototype.htmlTag = 'img';\r\n\r\n  ImageButton.prototype.disableTag = 'pre, table';\r\n\r\n  ImageButton.prototype.defaultImage = '';\r\n\r\n  ImageButton.prototype.needFocus = false;\r\n\r\n  ImageButton.prototype._init = function() {\r\n    var item, k, len, ref;\r\n    if (this.editor.opts.imageButton) {\r\n      if (Array.isArray(this.editor.opts.imageButton)) {\r\n        this.menu = [];\r\n        ref = this.editor.opts.imageButton;\r\n        for (k = 0, len = ref.length; k < len; k++) {\r\n          item = ref[k];\r\n          this.menu.push({\r\n            name: item + '-image',\r\n            text: this._t(item + 'Image')\r\n          });\r\n        }\r\n      } else {\r\n        this.menu = false;\r\n      }\r\n    } else {\r\n      if (this.editor.uploader != null) {\r\n        this.menu = [\r\n          {\r\n            name: 'upload-image',\r\n            text: this._t('uploadImage')\r\n          }, {\r\n            name: 'external-image',\r\n            text: this._t('externalImage')\r\n          }\r\n        ];\r\n      } else {\r\n        this.menu = false;\r\n      }\r\n    }\r\n    this.defaultImage = this.editor.opts.defaultImage;\r\n    this.editor.body.on('click', 'img:not([data-non-image])', (function(_this) {\r\n      return function(e) {\r\n        var $img, range;\r\n        $img = $(e.currentTarget);\r\n        range = document.createRange();\r\n        range.selectNode($img[0]);\r\n        _this.editor.selection.range(range);\r\n        if (!_this.editor.util.support.onselectionchange) {\r\n          _this.editor.trigger('selectionchanged');\r\n        }\r\n        return false;\r\n      };\r\n    })(this));\r\n    this.editor.body.on('mouseup', 'img:not([data-non-image])', function(e) {\r\n      return false;\r\n    });\r\n    this.editor.on('selectionchanged.image', (function(_this) {\r\n      return function() {\r\n        var $contents, $img, range;\r\n        range = _this.editor.selection.range();\r\n        if (range == null) {\r\n          return;\r\n        }\r\n        $contents = $(range.cloneContents()).contents();\r\n        if ($contents.length === 1 && $contents.is('img:not([data-non-image])')) {\r\n          $img = $(range.startContainer).contents().eq(range.startOffset);\r\n          return _this.popover.show($img);\r\n        } else {\r\n          return _this.popover.hide();\r\n        }\r\n      };\r\n    })(this));\r\n    this.editor.on('valuechanged.image', (function(_this) {\r\n      return function() {\r\n        var $masks;\r\n        $masks = _this.editor.wrapper.find('.simditor-image-loading');\r\n        if (!($masks.length > 0)) {\r\n          return;\r\n        }\r\n        return $masks.each(function(i, mask) {\r\n          var $img, $mask, file;\r\n          $mask = $(mask);\r\n          $img = $mask.data('img');\r\n          if (!($img && $img.parent().length > 0)) {\r\n            $mask.remove();\r\n            if ($img) {\r\n              file = $img.data('file');\r\n              if (file) {\r\n                _this.editor.uploader.cancel(file);\r\n                if (_this.editor.body.find('img.uploading').length < 1) {\r\n                  return _this.editor.uploader.trigger('uploadready', [file]);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        });\r\n      };\r\n    })(this));\r\n    return Button.prototype._init.call(this);\r\n  };\r\n\r\n  ImageButton.prototype.render = function() {\r\n    var args;\r\n    args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n    Button.prototype.render.apply(this, args);\r\n    this.popover = new ImagePopover({\r\n      button: this\r\n    });\r\n    if (this.editor.opts.imageButton === 'upload') {\r\n      return this._initUploader(this.el);\r\n    }\r\n  };\r\n\r\n  ImageButton.prototype.renderMenu = function() {\r\n    Button.prototype.renderMenu.call(this);\r\n    return this._initUploader();\r\n  };\r\n\r\n  ImageButton.prototype._initUploader = function($uploadItem) {\r\n    var $input, createInput, uploadProgress;\r\n    if ($uploadItem == null) {\r\n      $uploadItem = this.menuEl.find('.menu-item-upload-image');\r\n    }\r\n    if (this.editor.uploader == null) {\r\n      this.el.find('.btn-upload').remove();\r\n      return;\r\n    }\r\n    $input = null;\r\n    createInput = (function(_this) {\r\n      return function() {\r\n        if ($input) {\r\n          $input.remove();\r\n        }\r\n        return $input = $('<input/>', {\r\n          type: 'file',\r\n          title: _this._t('uploadImage'),\r\n          multiple: true,\r\n          accept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg'\r\n        }).appendTo($uploadItem);\r\n      };\r\n    })(this);\r\n    createInput();\r\n    $uploadItem.on('click mousedown', 'input[type=file]', function(e) {\r\n      return e.stopPropagation();\r\n    });\r\n    $uploadItem.on('change', 'input[type=file]', (function(_this) {\r\n      return function(e) {\r\n        if (_this.editor.inputManager.focused) {\r\n          _this.editor.uploader.upload($input, {\r\n            inline: true\r\n          });\r\n          createInput();\r\n        } else {\r\n          _this.editor.one('focus', function(e) {\r\n            _this.editor.uploader.upload($input, {\r\n              inline: true\r\n            });\r\n            return createInput();\r\n          });\r\n          _this.editor.focus();\r\n        }\r\n        return _this.wrapper.removeClass('menu-on');\r\n      };\r\n    })(this));\r\n    this.editor.uploader.on('beforeupload', (function(_this) {\r\n      return function(e, file) {\r\n        var $img;\r\n        if (!file.inline) {\r\n          return;\r\n        }\r\n        if (file.img) {\r\n          $img = $(file.img);\r\n        } else {\r\n          $img = _this.createImage(file.name);\r\n          file.img = $img;\r\n        }\r\n        $img.addClass('uploading');\r\n        $img.data('file', file);\r\n        return _this.editor.uploader.readImageFile(file.obj, function(img) {\r\n          var src;\r\n          if (!$img.hasClass('uploading')) {\r\n            return;\r\n          }\r\n          src = img ? img.src : _this.defaultImage;\r\n          return _this.loadImage($img, src, function() {\r\n            if (_this.popover.active) {\r\n              _this.popover.refresh();\r\n              return _this.popover.srcEl.val(_this._t('uploading')).prop('disabled', true);\r\n            }\r\n          });\r\n        });\r\n      };\r\n    })(this));\r\n    uploadProgress = langx.proxy(this.editor.util.throttle(function(e, file, loaded, total) {\r\n      var $img, $mask, percent;\r\n      if (!file.inline) {\r\n        return;\r\n      }\r\n      $mask = file.img.data('mask');\r\n      if (!$mask) {\r\n        return;\r\n      }\r\n      $img = $mask.data('img');\r\n      if (!($img.hasClass('uploading') && $img.parent().length > 0)) {\r\n        $mask.remove();\r\n        return;\r\n      }\r\n      percent = loaded / total;\r\n      percent = (percent * 100).toFixed(0);\r\n      if (percent > 99) {\r\n        percent = 99;\r\n      }\r\n      return $mask.find('.progress').height((100 - percent) + \"%\");\r\n    }, 500), this);\r\n    this.editor.uploader.on('uploadprogress', uploadProgress);\r\n    this.editor.uploader.on('uploadsuccess', (function(_this) {\r\n      return function(e, file, result) {\r\n        var $img, img_path, msg;\r\n        if (!file.inline) {\r\n          return;\r\n        }\r\n        $img = file.img;\r\n        if (!($img.hasClass('uploading') && $img.parent().length > 0)) {\r\n          return;\r\n        }\r\n        if (typeof result !== 'object') {\r\n          try {\r\n            result = JSON.parse(result);\r\n          } catch (_error) {\r\n            e = _error;\r\n            result = {\r\n              success: false\r\n            };\r\n          }\r\n        }\r\n        if (result.success === false) {\r\n          msg = result.msg || _this._t('uploadFailed');\r\n          alert(msg);\r\n          img_path = _this.defaultImage;\r\n        } else {\r\n          img_path = result.file_path;\r\n        }\r\n        _this.loadImage($img, img_path, function() {\r\n          var $mask;\r\n          $img.removeData('file');\r\n          $img.removeClass('uploading').removeClass('loading');\r\n          $mask = $img.data('mask');\r\n          if ($mask) {\r\n            $mask.remove();\r\n          }\r\n          $img.removeData('mask');\r\n          _this.editor.trigger('valuechanged');\r\n          if (_this.editor.body.find('img.uploading').length < 1) {\r\n            return _this.editor.uploader.trigger('uploadready', [file, result]);\r\n          }\r\n        });\r\n        if (_this.popover.active) {\r\n          _this.popover.srcEl.prop('disabled', false);\r\n          return _this.popover.srcEl.val(result.file_path);\r\n        }\r\n      };\r\n    })(this));\r\n    return this.editor.uploader.on('uploaderror', (function(_this) {\r\n      return function(e, file, xhr) {\r\n        var $img, msg, result;\r\n        if (!file.inline) {\r\n          return;\r\n        }\r\n        if (xhr.statusText === 'abort') {\r\n          return;\r\n        }\r\n        if (xhr.responseText) {\r\n          try {\r\n            result = JSON.parse(xhr.responseText);\r\n            msg = result.msg;\r\n          } catch (_error) {\r\n            e = _error;\r\n            msg = _this._t('uploadError');\r\n          }\r\n        }\r\n        $img = file.img;\r\n        if (!($img.hasClass('uploading') && $img.parent().length > 0)) {\r\n          return;\r\n        }\r\n        _this.loadImage($img, _this.defaultImage, function() {\r\n          var $mask;\r\n          $img.removeData('file');\r\n          $img.removeClass('uploading').removeClass('loading');\r\n          $mask = $img.data('mask');\r\n          if ($mask) {\r\n            $mask.remove();\r\n          }\r\n          return $img.removeData('mask');\r\n        });\r\n        if (_this.popover.active) {\r\n          _this.popover.srcEl.prop('disabled', false);\r\n          _this.popover.srcEl.val(_this.defaultImage);\r\n        }\r\n        _this.editor.trigger('valuechanged');\r\n        if (_this.editor.body.find('img.uploading').length < 1) {\r\n          return _this.editor.uploader.trigger('uploadready', [file, result]);\r\n        }\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  ImageButton.prototype._status = function() {\r\n    return this._disableStatus();\r\n  };\r\n\r\n  ImageButton.prototype.loadImage = function($img, src, callback) {\r\n    var $mask, img, positionMask;\r\n    positionMask = (function(_this) {\r\n      return function() {\r\n        var imgOffset, wrapperOffset;\r\n        imgOffset = $img.offset();\r\n        wrapperOffset = _this.editor.wrapper.offset();\r\n        return $mask.css({\r\n          top: imgOffset.top - wrapperOffset.top,\r\n          left: imgOffset.left - wrapperOffset.left,\r\n          width: $img.width(),\r\n          height: $img.height()\r\n        }).show();\r\n      };\r\n    })(this);\r\n    $img.addClass('loading');\r\n    $mask = $img.data('mask');\r\n    if (!$mask) {\r\n      $mask = $('<div class=\"simditor-image-loading\">\\n  <div class=\"progress\"></div>\\n</div>').hide().appendTo(this.editor.wrapper);\r\n      positionMask();\r\n      $img.data('mask', $mask);\r\n      $mask.data('img', $img);\r\n    }\r\n    img = new Image();\r\n    img.onload = (function(_this) {\r\n      return function() {\r\n        var height, width;\r\n        if (!$img.hasClass('loading') && !$img.hasClass('uploading')) {\r\n          return;\r\n        }\r\n        width = img.width;\r\n        height = img.height;\r\n        $img.attr({\r\n          src: src,\r\n          width: width,\r\n          height: height,\r\n          'data-image-size': width + ',' + height\r\n        }).removeClass('loading');\r\n        if ($img.hasClass('uploading')) {\r\n          _this.editor.util.reflow(_this.editor.body);\r\n          positionMask();\r\n        } else {\r\n          $mask.remove();\r\n          $img.removeData('mask');\r\n        }\r\n        if (langx.isFunction(callback)) {\r\n          return callback(img);\r\n        }\r\n      };\r\n    })(this);\r\n    img.onerror = function() {\r\n      if (langx.isFunction(callback)) {\r\n        callback(false);\r\n      }\r\n      $mask.remove();\r\n      return $img.removeData('mask').removeClass('loading');\r\n    };\r\n    return img.src = src;\r\n  };\r\n\r\n  ImageButton.prototype.createImage = function(name) {\r\n    var $img, range;\r\n    if (name == null) {\r\n      name = 'Image';\r\n    }\r\n    if (!this.editor.inputManager.focused) {\r\n      this.editor.focus();\r\n    }\r\n    range = this.editor.selection.range();\r\n    range.deleteContents();\r\n    this.editor.selection.range(range);\r\n    $img = $('<img/>').attr('alt', name);\r\n    range.insertNode($img[0]);\r\n    this.editor.selection.setRangeAfter($img, range);\r\n    this.editor.trigger('valuechanged');\r\n    return $img;\r\n  };\r\n\r\n  ImageButton.prototype.command = function(src) {\r\n    var $img;\r\n    $img = this.createImage();\r\n    return this.loadImage($img, src || this.defaultImage, (function(_this) {\r\n      return function() {\r\n        _this.editor.trigger('valuechanged');\r\n        _this.editor.util.reflow($img);\r\n        $img.click();\r\n        return _this.popover.one('popovershow', function() {\r\n          _this.popover.srcEl.focus();\r\n          return _this.popover.srcEl[0].select();\r\n        });\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  Simditor.Toolbar.addButton(ImageButton);\t\r\n\r\n  return ImageButton;\r\n\r\n});\ndefine('skylark-simditor/buttons/IndentButton',[\r\n  \"skylark-jquery\",\r\n  \"../Toolbar\",\r\n  \"../Simditor\",\r\n  \"../Button\"\r\n],function($,Toolbar,Simditor,Button){ \r\n  \r\n   var IndentButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n  IndentButton.prototype.name = 'indent';\r\n\r\n  IndentButton.prototype.icon = 'indent';\r\n\r\n  IndentButton.prototype._init = function() {\r\n    var hotkey;\r\n    hotkey = this.editor.opts.tabIndent === false ? '' : ' (Tab)';\r\n    this.title = this._t(this.name) + hotkey;\r\n    return Button.prototype._init.call(this);\r\n  };\r\n\r\n  IndentButton.prototype._status = function() {};\r\n\r\n  IndentButton.prototype.command = function() {\r\n    return this.editor.indentation.indent();\r\n  };\r\n\r\n  Simditor.Toolbar.addButton(IndentButton);\t\r\n\r\n  return IndentButton;\r\n});\ndefine('skylark-simditor/buttons/ItalicButton',[\r\n  \"skylark-jquery\",\r\n  \"../Toolbar\",\r\n  \"../Simditor\",\r\n  \"../Button\"\r\n],function($,Toolbar,Simditor,Button){ \r\n  \r\n\r\n  var ItalicButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n  ItalicButton.prototype.name = 'italic';\r\n\r\n  ItalicButton.prototype.icon = 'italic';\r\n\r\n  ItalicButton.prototype.htmlTag = 'i';\r\n\r\n  ItalicButton.prototype.disableTag = 'pre';\r\n\r\n  ItalicButton.prototype.shortcut = 'cmd+i';\r\n\r\n  ItalicButton.prototype._init = function() {\r\n    if (this.editor.util.os.mac) {\r\n      this.title = this.title + \" ( Cmd + i )\";\r\n    } else {\r\n      this.title = this.title + \" ( Ctrl + i )\";\r\n      this.shortcut = 'ctrl+i';\r\n    }\r\n    return Button.prototype._init.call(this);\r\n  };\r\n\r\n  ItalicButton.prototype._activeStatus = function() {\r\n    var active;\r\n    active = document.queryCommandState('italic') === true;\r\n    this.setActive(active);\r\n    return this.active;\r\n  };\r\n\r\n  ItalicButton.prototype.command = function() {\r\n    document.execCommand('italic');\r\n    if (!this.editor.util.support.oninput) {\r\n      this.editor.trigger('valuechanged');\r\n    }\r\n    return $(document).trigger('selectionchange');\r\n  };\r\n\r\n  Simditor.Toolbar.addButton(ItalicButton); \r\n\r\n  return ItalicButton;\r\n\r\n});\ndefine('skylark-simditor/buttons/LinkPopover',[\r\n  \"skylark-jquery\",\r\n  \"../Toolbar\",\r\n  \"../Simditor\",\r\n  \"../Popover\"\r\n],function($,Toolbar,Simditor,Popover){ \r\n  var LinkPopover = Popover.inherit({\r\n\r\n  });\r\n\r\n  LinkPopover.prototype.render = function() {\r\n    var tpl;\r\n    tpl = \"<div class=\\\"link-settings\\\">\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('linkText')) + \"</label>\\n    <input class=\\\"link-text\\\" type=\\\"text\\\"/>\\n    <a class=\\\"btn-unlink\\\" href=\\\"javascript:;\\\" title=\\\"\" + (this._t('removeLink')) + \"\\\"\\n      tabindex=\\\"-1\\\">\\n      <span class=\\\"simditor-icon simditor-icon-unlink\\\"></span>\\n    </a>\\n  </div>\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('linkUrl')) + \"</label>\\n    <input class=\\\"link-url\\\" type=\\\"text\\\"/>\\n  </div>\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('linkTarget')) + \"</label>\\n    <select class=\\\"link-target\\\">\\n      <option value=\\\"_blank\\\">\" + (this._t('openLinkInNewWindow')) + \" (_blank)</option>\\n      <option value=\\\"_self\\\">\" + (this._t('openLinkInCurrentWindow')) + \" (_self)</option>\\n    </select>\\n  </div>\\n</div>\";\r\n    this.el.addClass('link-popover').append(tpl);\r\n    this.textEl = this.el.find('.link-text');\r\n    this.urlEl = this.el.find('.link-url');\r\n    this.unlinkEl = this.el.find('.btn-unlink');\r\n    this.selectTarget = this.el.find('.link-target');\r\n    this.textEl.on('keyup', (function(_this) {\r\n      return function(e) {\r\n        if (e.which === 13) {\r\n          return;\r\n        }\r\n        _this.target.text(_this.textEl.val());\r\n        return _this.editor.inputManager.throttledValueChanged();\r\n      };\r\n    })(this));\r\n    this.urlEl.on('keyup', (function(_this) {\r\n      return function(e) {\r\n        var val;\r\n        if (e.which === 13) {\r\n          return;\r\n        }\r\n        val = _this.urlEl.val();\r\n        if (!(/^(http|https|ftp|ftps|file)?:\\/\\/|^(mailto|tel)?:|^\\//ig.test(val) || !val)) {\r\n          val = 'http://' + val;\r\n        }\r\n        _this.target.attr('href', val);\r\n        return _this.editor.inputManager.throttledValueChanged();\r\n      };\r\n    })(this));\r\n    $([this.urlEl[0], this.textEl[0]]).on('keydown', (function(_this) {\r\n      return function(e) {\r\n        var range;\r\n        if (e.which === 13 || e.which === 27 || (!e.shiftKey && e.which === 9 && $(e.target).hasClass('link-url'))) {\r\n          e.preventDefault();\r\n          range = document.createRange();\r\n          _this.editor.selection.setRangeAfter(_this.target, range);\r\n          _this.hide();\r\n          return _this.editor.inputManager.throttledValueChanged();\r\n        }\r\n      };\r\n    })(this));\r\n    this.unlinkEl.on('click', (function(_this) {\r\n      return function(e) {\r\n        var range, txtNode;\r\n        txtNode = document.createTextNode(_this.target.text());\r\n        _this.target.replaceWith(txtNode);\r\n        _this.hide();\r\n        range = document.createRange();\r\n        _this.editor.selection.setRangeAfter(txtNode, range);\r\n        return _this.editor.inputManager.throttledValueChanged();\r\n      };\r\n    })(this));\r\n    return this.selectTarget.on('change', (function(_this) {\r\n      return function(e) {\r\n        _this.target.attr('target', _this.selectTarget.val());\r\n        return _this.editor.inputManager.throttledValueChanged();\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  LinkPopover.prototype.show = function() {\r\n    var args;\r\n    args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n    Popover.prototype.show.apply(this, args);\r\n    this.textEl.val(this.target.text());\r\n    return this.urlEl.val(this.target.attr('href'));\r\n  };\r\n\r\n  return LinkPopover;\r\n\r\n});\ndefine('skylark-simditor/buttons/LinkButton',[\r\n  \"skylark-jquery\",\r\n  \"../Toolbar\",\r\n  \"../Simditor\",\r\n  \"../Button\",\r\n  \"./LinkPopover\"\r\n],function($,Toolbar,Simditor,Button,LinkPopover){ \r\n  \r\n\r\n  var LinkButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n  LinkButton.prototype.name = 'link';\r\n\r\n  LinkButton.prototype.icon = 'link';\r\n\r\n  LinkButton.prototype.htmlTag = 'a';\r\n\r\n  LinkButton.prototype.disableTag = 'pre';\r\n\r\n  LinkButton.prototype.render = function() {\r\n    var args;\r\n    args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n    Button.prototype.render.apply(this, args);\r\n    return this.popover = new LinkPopover({\r\n      button: this\r\n    });\r\n  };\r\n\r\n  LinkButton.prototype._status = function() {\r\n   Button.prototype._status.call(this);\r\n    if (this.active && !this.editor.selection.rangeAtEndOf(this.node)) {\r\n      return this.popover.show(this.node);\r\n    } else {\r\n      return this.popover.hide();\r\n    }\r\n  };\r\n\r\n  LinkButton.prototype.command = function() {\r\n    var $contents, $link, $newBlock, linkText, range, txtNode;\r\n    range = this.editor.selection.range();\r\n    if (this.active) {\r\n      txtNode = document.createTextNode(this.node.text());\r\n      this.node.replaceWith(txtNode);\r\n      range.selectNode(txtNode);\r\n    } else {\r\n      $contents = $(range.extractContents());\r\n      linkText = this.editor.formatter.clearHtml($contents.contents(), false);\r\n      $link = $('<a/>', {\r\n        href: '',\r\n        target: '_blank',\r\n        text: linkText || this._t('linkText')\r\n      });\r\n      if (this.editor.selection.blockNodes().length > 0) {\r\n        range.insertNode($link[0]);\r\n      } else {\r\n        $newBlock = $('<p/>').append($link);\r\n        range.insertNode($newBlock[0]);\r\n      }\r\n      range.selectNodeContents($link[0]);\r\n      this.popover.one('popovershow', (function(_this) {\r\n        return function() {\r\n          if (linkText) {\r\n            _this.popover.urlEl.focus();\r\n            return _this.popover.urlEl[0].select();\r\n          } else {\r\n            _this.popover.textEl.focus();\r\n            return _this.popover.textEl[0].select();\r\n          }\r\n        };\r\n      })(this));\r\n    }\r\n    this.editor.selection.range(range);\r\n    return this.editor.trigger('valuechanged');\r\n  };\r\n\r\n  Simditor.Toolbar.addButton(LinkButton);\r\n\r\n  return LinkButton;\r\n\r\n});\ndefine('skylark-simditor/buttons/ListButton',[\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-jquery\",\r\n  \"../Toolbar\",\r\n  \"../Simditor\",\r\n  \"../Button\"\r\n],function(noder,$,Toolbar,Simditor,Button){ \r\n  var ListButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n    ListButton.prototype.type = '';\r\n\r\n    ListButton.prototype.disableTag = 'pre, table';\r\n\r\n    ListButton.prototype.command = function(param) {\r\n      var $list, $rootNodes, anotherType;\r\n      $rootNodes = this.editor.selection.blockNodes();\r\n      anotherType = this.type === 'ul' ? 'ol' : 'ul';\r\n      this.editor.selection.save();\r\n      $list = null;\r\n      $rootNodes.each((function(_this) {\r\n        return function(i, node) {\r\n          var $node;\r\n          $node = $(node);\r\n          if ($node.is('blockquote, li') || $node.is(_this.disableTag) || _this.editor.util.isDecoratedNode($node) || !noder.contains(document, node)) {\r\n            return;\r\n          }\r\n          if ($node.is(_this.type)) {\r\n            $node.children('li').each(function(i, li) {\r\n              var $childList, $li;\r\n              $li = $(li);\r\n              $childList = $li.children('ul, ol').insertAfter($node);\r\n              return $('<p/>').append($(li).html() || _this.editor.util.phBr).insertBefore($node);\r\n            });\r\n            return $node.remove();\r\n          } else if ($node.is(anotherType)) {\r\n            return $('<' + _this.type + '/>').append($node.contents()).replaceAll($node);\r\n          } else if ($list && $node.prev().is($list)) {\r\n            $('<li/>').append($node.html() || _this.editor.util.phBr).appendTo($list);\r\n            return $node.remove();\r\n          } else {\r\n            $list = $(\"<\" + _this.type + \"><li></li></\" + _this.type + \">\");\r\n            $list.find('li').append($node.html() || _this.editor.util.phBr);\r\n            return $list.replaceAll($node);\r\n          }\r\n        };\r\n      })(this));\r\n      this.editor.selection.restore();\r\n      return this.editor.trigger('valuechanged');\r\n    };\r\n\r\n    return ListButton;\r\n\t\r\n});\ndefine('skylark-simditor/buttons/OrderListButton',[\r\n  \"skylark-jquery\",\r\n  \"../Toolbar\",\r\n  \"../Simditor\",\r\n  \"./ListButton\"\r\n],function($,Toolbar,Simditor,ListButton){ \r\n  var OrderListButton = ListButton.inherit({\r\n\r\n   });\r\n\r\n\r\n    OrderListButton.prototype.type = 'ol';\r\n\r\n    OrderListButton.prototype.name = 'ol';\r\n\r\n    OrderListButton.prototype.icon = 'list-ol';\r\n\r\n    OrderListButton.prototype.htmlTag = 'ol';\r\n\r\n    OrderListButton.prototype.shortcut = 'cmd+/';\r\n\r\n    OrderListButton.prototype._init = function() {\r\n      if (this.editor.util.os.mac) {\r\n        this.title = this.title + ' ( Cmd + / )';\r\n      } else {\r\n        this.title = this.title + ' ( ctrl + / )';\r\n        this.shortcut = 'ctrl+/';\r\n      }\r\n      return ListButton.prototype._init.call(this);\r\n    };\r\n\r\n    Simditor.Toolbar.addButton(OrderListButton);\r\n\r\n    return OrderListButton;\r\n\t\r\n});\ndefine('skylark-simditor/buttons/OutdentButton',[\r\n  \"skylark-jquery\",\r\n  \"../Toolbar\",\r\n  \"../Simditor\",\r\n  \"../Button\"\r\n],function($,Toolbar,Simditor,Button){ \r\n  var OutdentButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n  OutdentButton.prototype.name = 'outdent';\r\n\r\n  OutdentButton.prototype.icon = 'outdent';\r\n\r\n  OutdentButton.prototype._init = function() {\r\n    var hotkey;\r\n    hotkey = this.editor.opts.tabIndent === false ? '' : ' (Shift + Tab)';\r\n    this.title = this._t(this.name) + hotkey;\r\n    return Button.prototype._init.call(this);\r\n  };\r\n\r\n  OutdentButton.prototype._status = function() {};\r\n\r\n  OutdentButton.prototype.command = function() {\r\n    return this.editor.indentation.indent(true);\r\n  };\r\n\r\n  Simditor.Toolbar.addButton(OutdentButton);\t\r\n\r\n  return OutdentButton;\r\n\r\n});\ndefine('skylark-simditor/buttons/StrikethroughButton',[\r\n  \"skylark-jquery\",\r\n  \"../Toolbar\",\r\n  \"../Simditor\",\r\n  \"../Button\"\r\n],function($,Toolbar,Simditor,Button){ \r\n  \r\n  var StrikethroughButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n  StrikethroughButton.prototype.name = 'strikethrough';\r\n\r\n  StrikethroughButton.prototype.icon = 'strikethrough';\r\n\r\n  StrikethroughButton.prototype.htmlTag = 'strike';\r\n\r\n  StrikethroughButton.prototype.disableTag = 'pre';\r\n\r\n  StrikethroughButton.prototype._activeStatus = function() {\r\n    var active;\r\n    active = document.queryCommandState('strikethrough') === true;\r\n    this.setActive(active);\r\n    return this.active;\r\n  };\r\n\r\n  StrikethroughButton.prototype.command = function() {\r\n    document.execCommand('strikethrough');\r\n    if (!this.editor.util.support.oninput) {\r\n      this.editor.trigger('valuechanged');\r\n    }\r\n    return $(document).trigger('selectionchange');\r\n  };\r\n\r\n  Simditor.Toolbar.addButton(StrikethroughButton);\t\r\n\r\n  return StrikethroughButton;\r\n\r\n});\ndefine('skylark-utils-dom/tables',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./query\"\r\n], function(dom, langx,$) {\r\n  //TODO : don't use query\r\n\r\n  function tables() {\r\n      return tables;\r\n  }\r\n\r\n  function _changeCellTag($tr, tagName) {\r\n    return $tr.find('td, th').each(function(i, cell) {\r\n      var $cell;\r\n      $cell = $(cell);\r\n      return $cell.replaceWith(\"<\" + tagName + \">\" + ($cell.html()) + \"</\" + tagName + \">\");\r\n    });\r\n  }\r\n\r\n  function _nextRow($tr) {\r\n    var $nextTr;\r\n    $nextTr = $tr.next('tr');\r\n    if ($nextTr.length < 1 && $tr.parent('thead').length > 0) {\r\n      $nextTr = $tr.parent('thead').next('tbody').find('tr:first');\r\n    }\r\n    return $nextTr;\r\n  };\r\n\r\n  function _prevRow($tr) {\r\n    var $prevTr;\r\n    $prevTr = $tr.prev('tr');\r\n    if ($prevTr.length < 1 && $tr.parent('tbody').length > 0) {\r\n      $prevTr = $tr.parent('tbody').prev('thead').find('tr');\r\n    }\r\n    return $prevTr;\r\n  }\r\n\r\n  function createTable(row, col, phBr) {\r\n    var $table, $tbody, $td, $thead, $tr, c, k, l, r, ref, ref1;\r\n    $table = $('<table/>');\r\n    $thead = $('<thead/>').appendTo($table);\r\n    $tbody = $('<tbody/>').appendTo($table);\r\n    for (r = k = 0, ref = row; 0 <= ref ? k < ref : k > ref; r = 0 <= ref ? ++k : --k) {\r\n        $tr = $('<tr/>');\r\n        $tr.appendTo(r === 0 ? $thead : $tbody);\r\n        for (c = l = 0, ref1 = col; 0 <= ref1 ? l < ref1 : l > ref1; c = 0 <= ref1 ? ++l : --l) {\r\n          $td = $(r === 0 ? '<th/>' : '<td/>').appendTo($tr);\r\n          if (phBr) {\r\n              $td.append(phBr);\r\n          }\r\n        }\r\n    }   \r\n    return $table[0];\r\n  }\r\n    \r\n\r\n  //cls = simditor-table\r\n  function decorate(table,cssClasses) {\r\n    var $table = $(table);\r\n\r\n    var $colgroup, $headRow, $resizeHandle, $tbody, $thead, $wrapper;\r\n    if ($table.parent('.' + cssClasses.tableDecorate).length > 0) {\r\n      undecorate(table);\r\n    }\r\n    $table.wrap('<div class=\"' + cssClasses.tableDecorate + '\"></div>');\r\n    $wrapper = $table.parent('.' + cssClasses.tableDecorate );\r\n    $colgroup = $table.find('colgroup');\r\n    if ($table.find('thead').length < 1) {\r\n      $thead = $('<thead />');\r\n      $headRow = $table.find('tr').first();\r\n      $thead.append($headRow);\r\n      _changeCellTag($headRow, 'th');\r\n      $tbody = $table.find('tbody');\r\n      if ($tbody.length > 0) {\r\n        $tbody.before($thead);\r\n      } else {\r\n        $table.prepend($thead);\r\n      }\r\n    }\r\n    if ($colgroup.length < 1) {\r\n      $colgroup = $('<colgroup/>').prependTo($table);\r\n      $table.find('thead tr th').each(function(i, td) {\r\n        var $col;\r\n        return $col = $('<col/>').appendTo($colgroup);\r\n      });\r\n      refreshTableWidth($table);\r\n    }\r\n    $resizeHandle = $('<div />', {\r\n      \"class\": cssClasses.resizeHandle, // 'simditor-resize-handle',\r\n      contenteditable: 'false'\r\n    }).appendTo($wrapper);\r\n    return $table.parent();\r\n  }\r\n\r\n  function deleteTable(td,callback) {\r\n    var $td = $(td);\r\n\r\n    var $block, $table;\r\n    $table = $td.closest('.simditor-table');\r\n    $block = $table.next('p');\r\n    $table.remove();\r\n    if (callback) {\r\n      callback($block);\r\n    }\r\n  }\r\n\r\n  function deleteRow(td,callback) {\r\n    var $td = $(td);\r\n\r\n    var $newTr, $tr, index;\r\n    $tr = $td.parent('tr');\r\n    if ($tr.closest('table').find('tr').length < 1) {\r\n      return deleteTable(td);\r\n    } else {\r\n      $newTr = _nextRow($tr);\r\n      if (!($newTr.length > 0)) {\r\n        $newTr = _prevRow($tr);\r\n      }\r\n      index = $tr.find('td, th').index($td);\r\n      if ($tr.parent().is('thead')) {\r\n        $newTr.appendTo($tr.parent());\r\n        _changeCellTag($newTr, 'th');\r\n      }\r\n      $tr.remove();\r\n    \r\n      if (callback) {\r\n        callback($newTr[0],index);\r\n      }\r\n      //return this.editor.selection.setRangeAtEndOf($newTr.find('td, th').eq(index));\r\n    }\r\n  }\r\n\r\n  function insertRow(td, direction,phBr,callback) {\r\n    var $td = $(td);\r\n\r\n    var $newTr, $table, $tr, cellTag, colNum, i, index, k, ref;\r\n    if (direction == null) {\r\n      direction = 'after';\r\n    }\r\n    $tr = $td.parent('tr');\r\n    $table = $tr.closest('table');\r\n    colNum = 0;\r\n    $table.find('tr').each(function(i, tr) {\r\n      return colNum = Math.max(colNum, $(tr).find('td').length);\r\n    });\r\n    index = $tr.find('td, th').index($td);\r\n    $newTr = $('<tr/>');\r\n    cellTag = 'td';\r\n    if (direction === 'after' && $tr.parent().is('thead')) {\r\n      $tr.parent().next('tbody').prepend($newTr);\r\n    } else if (direction === 'before' && $tr.parent().is('thead')) {\r\n      $tr.before($newTr);\r\n      $tr.parent().next('tbody').prepend($tr);\r\n      _changeCellTag($tr, 'td');\r\n      cellTag = 'th';\r\n    } else {\r\n      $tr[direction]($newTr);\r\n    }\r\n    for (i = k = 1, ref = colNum; 1 <= ref ? k <= ref : k >= ref; i = 1 <= ref ? ++k : --k) {\r\n      $(\"<\" + cellTag + \"/>\").append(phBr).appendTo($newTr);\r\n    }\r\n\r\n    if (callback) {\r\n      callback($newTr[0],index);\r\n    }\r\n  }\r\n\r\n  function deleteCol(td,callback) {\r\n    var $td = $(td);\r\n\r\n    var $newTd, $table, $tr, index, noOtherCol, noOtherRow;\r\n    $tr = $td.parent('tr');\r\n    noOtherRow = $tr.closest('table').find('tr').length < 2;\r\n    noOtherCol = $td.siblings('td, th').length < 1;\r\n    if (noOtherRow && noOtherCol) {\r\n      return deleteTable(td);\r\n    } else {\r\n      index = $tr.find('td, th').index($td);\r\n      $newTd = $td.next('td, th');\r\n      if (!($newTd.length > 0)) {\r\n        $newTd = $tr.prev('td, th');\r\n      }\r\n      $table = $tr.closest('table');\r\n      $table.find('col').eq(index).remove();\r\n      $table.find('tr').each(function(i, tr) {\r\n        return $(tr).find('td, th').eq(index).remove();\r\n      });\r\n      refreshTableWidth($table);\r\n      //return this.editor.selection.setRangeAtEndOf($newTd);\r\n      if (callback) {\r\n        callback($newTd[0]);\r\n      }\r\n    }\r\n  }\r\n\r\n  function insertCol(td, direction,phBr,callback) {\r\n    var $td = $(td);\r\n\r\n    var $col, $newCol, $newTd, $table, $tr, index, tableWidth, width;\r\n    if (direction == null) {\r\n      direction = 'after';\r\n    }\r\n    $tr = $td.parent('tr');\r\n    index = $tr.find('td, th').index($td);\r\n    $table = $td.closest('table');\r\n    $col = $table.find('col').eq(index);\r\n    $table.find('tr').each((function(_this) {\r\n      return function(i, tr) {\r\n        var $newTd, cellTag;\r\n        cellTag = $(tr).parent().is('thead') ? 'th' : 'td';\r\n        $newTd = $(\"<\" + cellTag + \"/>\").append(phBr);\r\n        return $(tr).find('td, th').eq(index)[direction]($newTd);\r\n      };\r\n    })(this));\r\n    $newCol = $('<col/>');\r\n    $col[direction]($newCol);\r\n    tableWidth = $table.width();\r\n    width = Math.max(parseFloat($col.attr('width')) / 2, 50 / tableWidth * 100);\r\n    $col.attr('width', width + '%');\r\n    $newCol.attr('width', width + '%');\r\n    refreshTableWidth($table);\r\n    $newTd = direction === 'after' ? $td.next('td, th') : $td.prev('td, th');\r\n    //return this.editor.selection.setRangeAtStartOf($newTd);\r\n    if (callback) {\r\n      callback($newTd[0]);\r\n    }\r\n  }\r\n\r\n\r\n  function refreshTableWidth($table) {\r\n    return setTimeout((function(_this) {\r\n      return function() {\r\n        var cols, tableWidth;\r\n        tableWidth = $table.width();\r\n        cols = $table.find('col');\r\n        return $table.find('thead tr th').each(function(i, td) {\r\n          var $col;\r\n          $col = cols.eq(i);\r\n          return $col.attr('width', ($(td).outerWidth() / tableWidth * 100) + '%');\r\n        });\r\n      };\r\n    })(this), 0);\r\n  }\r\n\r\n\r\n  function resizable(container,options) {\r\n    var cssClasses = options.cssClasses,\r\n        clsResizeHandle = cssClasses.resizeHandle, // simditor-resize-handle\r\n        clsWrapper = cssClasses.wrapper, // .simditor-table\r\n        selectorWrapper = \".\" + clsWrapper,\r\n        selectorResizeHandle = \".\" + clsResizeHandle;\r\n\r\n    $(container).on('mousemove.table', selectorWrapper +' td, ' + selectorWrapper +' th', function(e) {\r\n      var $col, $colgroup, $resizeHandle, $td, $wrapper, index, ref, ref1, x;\r\n      $wrapper = $(this).parents(selectorWrapper);\r\n      $resizeHandle = $wrapper.find(selectorResizeHandle);\r\n      $colgroup = $wrapper.find('colgroup');\r\n      if ($wrapper.hasClass('resizing')) {\r\n        return;\r\n      }\r\n      $td = $(e.currentTarget);\r\n      x = e.pageX - $(e.currentTarget).offset().left;\r\n      if (x < 5 && $td.prev().length > 0) {\r\n        $td = $td.prev();\r\n      }\r\n      if ($td.next('td, th').length < 1) {\r\n        $resizeHandle.hide();\r\n        return;\r\n      }\r\n      if ((ref = $resizeHandle.data('td')) != null ? ref.is($td) : void 0) {\r\n        $resizeHandle.show();\r\n        return;\r\n      }\r\n      index = $td.parent().find('td, th').index($td);\r\n      $col = $colgroup.find('col').eq(index);\r\n      if ((ref1 = $resizeHandle.data('col')) != null ? ref1.is($col) : void 0) {\r\n        $resizeHandle.show();\r\n        return;\r\n      }\r\n      return $resizeHandle.css('left', $td.position().left + $td.outerWidth() - 5).data('td', $td).data('col', $col).show();\r\n    });\r\n\r\n    $(container).on('mouseleave'+ selectorWrapper, selectorWrapper, function(e) {\r\n      return $(this).find(selectorResizeHandle).hide();\r\n    });\r\n    return $(container).on('mousedown'+ selectorResizeHandle, selectorResizeHandle, function(e) {\r\n      var $handle, $leftCol, $leftTd, $rightCol, $rightTd, $wrapper, minWidth, startHandleLeft, startLeftWidth, startRightWidth, startX, tableWidth;\r\n      $wrapper = $(this).parent(selectorWrapper);\r\n      $handle = $(e.currentTarget);\r\n      $leftTd = $handle.data('td');\r\n      $leftCol = $handle.data('col');\r\n      $rightTd = $leftTd.next('td, th');\r\n      $rightCol = $leftCol.next('col');\r\n      startX = e.pageX;\r\n      startLeftWidth = $leftTd.outerWidth() * 1;\r\n      startRightWidth = $rightTd.outerWidth() * 1;\r\n      startHandleLeft = parseFloat($handle.css('left'));\r\n      tableWidth = $leftTd.closest(selectorWrapper).width();\r\n      minWidth = 50;\r\n      $(container).on('mousemove.resize-table', function(e) {\r\n        var deltaX, leftWidth, rightWidth;\r\n        deltaX = e.pageX - startX;\r\n        leftWidth = startLeftWidth + deltaX;\r\n        rightWidth = startRightWidth - deltaX;\r\n        if (leftWidth < minWidth) {\r\n          leftWidth = minWidth;\r\n          deltaX = minWidth - startLeftWidth;\r\n          rightWidth = startRightWidth - deltaX;\r\n        } else if (rightWidth < minWidth) {\r\n          rightWidth = minWidth;\r\n          deltaX = startRightWidth - minWidth;\r\n          leftWidth = startLeftWidth + deltaX;\r\n        }\r\n        $leftCol.attr('width', (leftWidth / tableWidth * 100) + '%');\r\n        $rightCol.attr('width', (rightWidth / tableWidth * 100) + '%');\r\n        return $handle.css('left', startHandleLeft + deltaX);\r\n      });\r\n      $(container).one('mouseup.resize-table', function(e) {\r\n        //$editor.sync();\r\n        $(container).off('.resize-table');\r\n        return $wrapper.removeClass('resizing');\r\n      });\r\n      $wrapper.addClass('resizing');\r\n      return false;\r\n    });\r\n  };\r\n\r\n  function undecorate(table) {\r\n    var $table = $(table);\r\n    if (!($table.parent('.simditor-table').length > 0)) {\r\n      return;\r\n    }\r\n    return $table.parent().replaceWith($table)[0];\r\n  };\r\n\r\n\r\n\r\n  langx.mixin(tables,{\r\n    \"createTable\" : createTable,\r\n    \"decorate\" : decorate,\r\n    \"deleteCol\" : deleteCol,\r\n    \"deleteRow\" : deleteRow,\r\n    \"deleteTable\" : deleteTable,\r\n    \"insertCol\" : insertCol,\r\n    \"insertRow\" : insertRow,\r\n    \"refreshTableWidth\" : refreshTableWidth,\r\n    \"resizable\" : resizable,\r\n    \"undecorate\" : undecorate\r\n  })\r\n\r\n\r\n  return dom.tables = tables;\r\n});\ndefine('skylark-simditor/buttons/TableButton',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/tables\",\r\n  \"skylark-jquery\",\r\n  \"../Toolbar\",\r\n  \"../Simditor\",\r\n  \"../Button\"\r\n],function(langx,tables,$,Toolbar,Simditor,Button){ \r\n  var TableButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n  TableButton.prototype.name = 'table';\r\n\r\n  TableButton.prototype.icon = 'table';\r\n\r\n  TableButton.prototype.htmlTag = 'table';\r\n\r\n  TableButton.prototype.disableTag = 'pre, li, blockquote';\r\n\r\n  TableButton.prototype.menu = true;\r\n\r\n  TableButton.prototype._init = function() {\r\n    Button.prototype._init.call(this);\r\n    langx.merge(this.editor.formatter._allowedTags, ['thead', 'th', 'tbody', 'tr', 'td', 'colgroup', 'col']);\r\n    langx.extend(this.editor.formatter._allowedAttributes, {\r\n      td: ['rowspan', 'colspan'],\r\n      col: ['width']\r\n    });\r\n    langx.extend(this.editor.formatter._allowedStyles, {\r\n      td: ['text-align'],\r\n      th: ['text-align']\r\n    });\r\n    this._initShortcuts();\r\n    this._initResize();\r\n    this.editor.on('decorate', (function(_this) {\r\n      return function(e, $el) {\r\n        return $el.find('table').each(function(i, table) {\r\n          return _this.decorate($(table));\r\n        });\r\n      };\r\n    })(this));\r\n    this.editor.on('undecorate', (function(_this) {\r\n      return function(e, $el) {\r\n        return $el.find('table').each(function(i, table) {\r\n          return _this.undecorate($(table));\r\n        });\r\n      };\r\n    })(this));\r\n    this.editor.on('selectionchanged.table', (function(_this) {\r\n      return function(e) {\r\n        var $container, range;\r\n        _this.editor.body.find('.simditor-table td, .simditor-table th').removeClass('active');\r\n        range = _this.editor.selection.range();\r\n        if (!range) {\r\n          return;\r\n        }\r\n        $container = _this.editor.selection.containerNode();\r\n        if (range.collapsed && $container.is('.simditor-table')) {\r\n          _this.editor.selection.setRangeAtEndOf($container);\r\n        }\r\n        return $container.closest('td, th', _this.editor.body).addClass('active');\r\n      };\r\n    })(this));\r\n    this.editor.on('blur.table', (function(_this) {\r\n      return function(e) {\r\n        return _this.editor.body.find('.simditor-table td, .simditor-table th').removeClass('active');\r\n      };\r\n    })(this));\r\n    this.editor.keystroke.add('up', 'td', (function(_this) {\r\n      return function(e, $node) {\r\n        _this._tdNav($node, 'up');\r\n        return true;\r\n      };\r\n    })(this));\r\n    this.editor.keystroke.add('up', 'th', (function(_this) {\r\n      return function(e, $node) {\r\n        _this._tdNav($node, 'up');\r\n        return true;\r\n      };\r\n    })(this));\r\n    this.editor.keystroke.add('down', 'td', (function(_this) {\r\n      return function(e, $node) {\r\n        _this._tdNav($node, 'down');\r\n        return true;\r\n      };\r\n    })(this));\r\n    return this.editor.keystroke.add('down', 'th', (function(_this) {\r\n      return function(e, $node) {\r\n        _this._tdNav($node, 'down');\r\n        return true;\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  TableButton.prototype._tdNav = function($td, direction) {\r\n    var $anotherTr, $tr, action, anotherTag, index, parentTag, ref;\r\n    if (direction == null) {\r\n      direction = 'up';\r\n    }\r\n    action = direction === 'up' ? 'prev' : 'next';\r\n    ref = direction === 'up' ? ['tbody', 'thead'] : ['thead', 'tbody'], parentTag = ref[0], anotherTag = ref[1];\r\n    $tr = $td.parent('tr');\r\n    $anotherTr = this[\"_\" + action + \"Row\"]($tr);\r\n    if (!($anotherTr.length > 0)) {\r\n      return true;\r\n    }\r\n    index = $tr.find('td, th').index($td);\r\n    return this.editor.selection.setRangeAtEndOf($anotherTr.find('td, th').eq(index));\r\n  };\r\n\r\n  TableButton.prototype._initResize = function() {\r\n\r\n    tables.resizable(document,{\r\n      cssClasses : {\r\n        resizeHandle : \"simditor-resize-handle\",\r\n        wrapper : \"simditor-table\"\r\n      }\r\n    });\r\n\r\n  };\r\n\r\n  TableButton.prototype._initShortcuts = function() {\r\n    this.editor.hotkeys.add('ctrl+alt+up', (function(_this) {\r\n      return function(e) {\r\n        _this.editMenu.find('.menu-item[data-param=insertRowAbove]').click();\r\n        return false;\r\n      };\r\n    })(this));\r\n    this.editor.hotkeys.add('ctrl+alt+down', (function(_this) {\r\n      return function(e) {\r\n        _this.editMenu.find('.menu-item[data-param=insertRowBelow]').click();\r\n        return false;\r\n      };\r\n    })(this));\r\n    this.editor.hotkeys.add('ctrl+alt+left', (function(_this) {\r\n      return function(e) {\r\n        _this.editMenu.find('.menu-item[data-param=insertColLeft]').click();\r\n        return false;\r\n      };\r\n    })(this));\r\n    return this.editor.hotkeys.add('ctrl+alt+right', (function(_this) {\r\n      return function(e) {\r\n        _this.editMenu.find('.menu-item[data-param=insertColRight]').click();\r\n        return false;\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  TableButton.prototype.renderMenu = function() {\r\n    var $table;\r\n    $(\"<div class=\\\"menu-create-table\\\">\\n</div>\\n<div class=\\\"menu-edit-table\\\">\\n  <ul>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"deleteRow\\\">\\n        <span>\" + (this._t('deleteRow')) + \"</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertRowAbove\\\">\\n        <span>\" + (this._t('insertRowAbove')) + \" ( Ctrl + Alt + ↑ )</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertRowBelow\\\">\\n        <span>\" + (this._t('insertRowBelow')) + \" ( Ctrl + Alt + ↓ )</span>\\n      </a>\\n    </li>\\n    <li><span class=\\\"separator\\\"></span></li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"deleteCol\\\">\\n        <span>\" + (this._t('deleteColumn')) + \"</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertColLeft\\\">\\n        <span>\" + (this._t('insertColumnLeft')) + \" ( Ctrl + Alt + ← )</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertColRight\\\">\\n        <span>\" + (this._t('insertColumnRight')) + \" ( Ctrl + Alt + → )</span>\\n      </a>\\n    </li>\\n    <li><span class=\\\"separator\\\"></span></li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"deleteTable\\\">\\n        <span>\" + (this._t('deleteTable')) + \"</span>\\n      </a>\\n    </li>\\n  </ul>\\n</div>\").appendTo(this.menuWrapper);\r\n    this.createMenu = this.menuWrapper.find('.menu-create-table');\r\n    this.editMenu = this.menuWrapper.find('.menu-edit-table');\r\n    $table = this.createTable(6, 6).appendTo(this.createMenu);\r\n    this.createMenu.on('mouseenter', 'td, th', (function(_this) {\r\n      return function(e) {\r\n        var $td, $tr, $trs, num;\r\n        _this.createMenu.find('td, th').removeClass('selected');\r\n        $td = $(e.currentTarget);\r\n        $tr = $td.parent();\r\n        num = $tr.find('td, th').index($td) + 1;\r\n        $trs = $tr.prevAll('tr').addBack();\r\n        if ($tr.parent().is('tbody')) {\r\n          $trs = $trs.add($table.find('thead tr'));\r\n        }\r\n        return $trs.find(\"td:lt(\" + num + \"), th:lt(\" + num + \")\").addClass('selected');\r\n      };\r\n    })(this));\r\n    this.createMenu.on('mouseleave', function(e) {\r\n      return $(e.currentTarget).find('td, th').removeClass('selected');\r\n    });\r\n    return this.createMenu.on('mousedown', 'td, th', (function(_this) {\r\n      return function(e) {\r\n        var $closestBlock, $td, $tr, colNum, rowNum;\r\n        _this.wrapper.removeClass('menu-on');\r\n        if (!_this.editor.inputManager.focused) {\r\n          return;\r\n        }\r\n        $td = $(e.currentTarget);\r\n        $tr = $td.parent();\r\n        colNum = $tr.find('td').index($td) + 1;\r\n        rowNum = $tr.prevAll('tr').length + 1;\r\n        if ($tr.parent().is('tbody')) {\r\n          rowNum += 1;\r\n        }\r\n        $table = _this.createTable(rowNum, colNum, true);\r\n        $closestBlock = _this.editor.selection.blockNodes().last();\r\n        if (_this.editor.util.isEmptyNode($closestBlock)) {\r\n          $closestBlock.replaceWith($table);\r\n        } else {\r\n          $closestBlock.after($table);\r\n        }\r\n        _this.decorate($table);\r\n        _this.editor.selection.setRangeAtStartOf($table.find('th:first'));\r\n        _this.editor.trigger('valuechanged');\r\n        return false;\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  TableButton.prototype.decorate = function($table) {\r\n    return $(tables.decorate($table[0],{\r\n      tableDecorate : 'simditor-table',\r\n      resizeHandle : 'simditor-resize-handle'\r\n    }));\r\n\r\n  };\r\n\r\n  TableButton.prototype.undecorate = function($table) {\r\n    return $(tables.undecorate($table[0],{\r\n      tableDecorate : 'simditor-table',\r\n      resizeHandle : 'simditor-resize-handle'\r\n    }));\r\n\r\n  };\r\n\r\n\r\n  TableButton.prototype.createTable = function(row, col, phBr) {\r\n    return $(tables.createTable(row,col,phBr ? this.editor.util.phBr : null));\r\n  };\r\n\r\n  TableButton.prototype.refreshTableWidth = function($table) {\r\n    return table.refreshTableWidth($table[0]);\r\n  };\r\n\r\n  TableButton.prototype.setActive = function(active) {\r\n    Button.prototype.setActive.call(this, active);\r\n    if (active) {\r\n      this.createMenu.hide();\r\n      return this.editMenu.show();\r\n    } else {\r\n      this.createMenu.show();\r\n      return this.editMenu.hide();\r\n    }\r\n  };\r\n\r\n  TableButton.prototype.deleteRow = function($td) {\r\n    var self = this,\r\n        ret; \r\n\r\n    tables.deleteRow($td[0],function(newTr,index){\r\n      if (newTr) {\r\n        ret = self.editor.selection.setRangeAtEndOf($(newTr).find('td, th').eq(index));\r\n      }\r\n    })\r\n\r\n    return ret;\r\n  };\r\n\r\n  TableButton.prototype.insertRow = function($td, direction) {\r\n    var self = this,\r\n        ret; \r\n\r\n    tables.insertRow($td[0],direction,self.editor.util.phBr,function(newTr,index){\r\n      ret =  self.editor.selection.setRangeAtStartOf($(newTr).find('td, th').eq(index));\r\n    })\r\n\r\n    return ret;\r\n\r\n  };\r\n\r\n  TableButton.prototype.deleteCol = function($td) {\r\n    var self = this,\r\n        ret; \r\n\r\n    tables.deleteCol($td[0],function(newTd){\r\n      if (newTd) {\r\n        ret = self.editor.selection.setRangeAtEndOf($(newTd));\r\n      }\r\n    })\r\n\r\n    return ret;\r\n  };\r\n\r\n  TableButton.prototype.insertCol = function($td, direction) {\r\n    var self = this,\r\n        ret; \r\n\r\n    tables.insertCol($td[0],direction,self.editor.util.phBr,function(newTd){\r\n      ret = self.editor.selection.setRangeAtStartOf($(newTd));\r\n    })\r\n\r\n    return ret;\r\n  };\r\n\r\n  TableButton.prototype.deleteTable = function($td) {\r\n    var self = this;\r\n    tables.deleteTable($td[0],function($block){\r\n      if ($block.length > 0) {\r\n        return self.editor.selection.setRangeAtStartOf($block);\r\n      }\r\n    });\r\n  };\r\n\r\n  TableButton.prototype.command = function(param) {\r\n    var $td;\r\n    $td = this.editor.selection.containerNode().closest('td, th');\r\n    if (!($td.length > 0)) {\r\n      return;\r\n    }\r\n    if (param === 'deleteRow') {\r\n      this.deleteRow($td);\r\n    } else if (param === 'insertRowAbove') {\r\n      this.insertRow($td, 'before');\r\n    } else if (param === 'insertRowBelow') {\r\n      this.insertRow($td);\r\n    } else if (param === 'deleteCol') {\r\n      this.deleteCol($td);\r\n    } else if (param === 'insertColLeft') {\r\n      this.insertCol($td, 'before');\r\n    } else if (param === 'insertColRight') {\r\n      this.insertCol($td);\r\n    } else if (param === 'deleteTable') {\r\n      this.deleteTable($td);\r\n    } else {\r\n      return;\r\n    }\r\n    return this.editor.trigger('valuechanged');\r\n  };\r\n\r\n  Simditor.Toolbar.addButton(TableButton);\r\n\r\n  return TableButton;\r\n\r\n\r\n});\ndefine('skylark-simditor/buttons/TitleButton',[\r\n  \"skylark-jquery\",\r\n  \"../Toolbar\",\r\n  \"../Simditor\",\r\n  \"../Button\",\r\n  \"../i18n\"\r\n],function($,Toolbar,Simditor,Button,i18n){ \r\n  var TitleButton = Button.inherit({\r\n\r\n   });\r\n\r\n  TitleButton.prototype.name = 'title';\r\n\r\n  TitleButton.prototype.htmlTag = 'h1, h2, h3, h4, h5';\r\n\r\n  TitleButton.prototype.disableTag = 'pre, table';\r\n\r\n  TitleButton.prototype._init = function() {\r\n    this.menu = [\r\n      {\r\n        name: 'normal',\r\n        text: i18n.translate('normalText'),\r\n        param: 'p'\r\n      }, '|', {\r\n        name: 'h1',\r\n        text: i18n.translate('title') + ' 1',\r\n        param: 'h1'\r\n      }, {\r\n        name: 'h2',\r\n        text: i18n.translate('title') + ' 2',\r\n        param: 'h2'\r\n      }, {\r\n        name: 'h3',\r\n        text: i18n.translate('title') + ' 3',\r\n        param: 'h3'\r\n      }, {\r\n        name: 'h4',\r\n        text: i18n.translate('title') + ' 4',\r\n        param: 'h4'\r\n      }, {\r\n        name: 'h5',\r\n        text: i18n.translate('title') + ' 5',\r\n        param: 'h5'\r\n      }\r\n    ];\r\n    return Button.prototype._init.call(this);\r\n  };\r\n\r\n  TitleButton.prototype.setActive = function(active, param) {\r\n    Button.prototype.setActive.call(this, active);\r\n    if (active) {\r\n      param || (param = this.node[0].tagName.toLowerCase());\r\n    }\r\n    this.el.removeClass('active-p active-h1 active-h2 active-h3 active-h4 active-h5');\r\n    if (active) {\r\n      return this.el.addClass('active active-' + param);\r\n    }\r\n  };\r\n\r\n  TitleButton.prototype.command = function(param) {\r\n    var $rootNodes;\r\n    $rootNodes = this.editor.selection.rootNodes();\r\n    this.editor.selection.save();\r\n    $rootNodes.each((function(_this) {\r\n      return function(i, node) {\r\n        var $node;\r\n        $node = $(node);\r\n        if ($node.is('blockquote') || $node.is(param) || $node.is(_this.disableTag) || _this.editor.util.isDecoratedNode($node)) {\r\n          return;\r\n        }\r\n        return $('<' + param + '/>').append($node.contents()).replaceAll($node);\r\n      };\r\n    })(this));\r\n    this.editor.selection.restore();\r\n    return this.editor.trigger('valuechanged');\r\n  };\r\n\r\n  Simditor.Toolbar.addButton(TitleButton);\r\n\r\n  return TitleButton;\r\n\r\n});\ndefine('skylark-simditor/buttons/UnderlineButton',[\r\n  \"skylark-jquery\",\r\n  \"../Toolbar\",\r\n  \"../Simditor\",\r\n  \"../Button\"\r\n],function($,Toolbar,Simditor,Button){\r\n  var UnderlineButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n  UnderlineButton.prototype.name = 'underline';\r\n\r\n  UnderlineButton.prototype.icon = 'underline';\r\n\r\n  UnderlineButton.prototype.htmlTag = 'u';\r\n\r\n  UnderlineButton.prototype.disableTag = 'pre';\r\n\r\n  UnderlineButton.prototype.shortcut = 'cmd+u';\r\n\r\n  UnderlineButton.prototype.render = function() {\r\n    if (this.editor.util.os.mac) {\r\n      this.title = this.title + ' ( Cmd + u )';\r\n    } else {\r\n      this.title = this.title + ' ( Ctrl + u )';\r\n      this.shortcut = 'ctrl+u';\r\n    }\r\n    return Button.prototype.render.call(this);\r\n  };\r\n\r\n  UnderlineButton.prototype._activeStatus = function() {\r\n    var active;\r\n    active = document.queryCommandState('underline') === true;\r\n    this.setActive(active);\r\n    return this.active;\r\n  };\r\n\r\n  UnderlineButton.prototype.command = function() {\r\n    document.execCommand('underline');\r\n    if (!this.editor.util.support.oninput) {\r\n      this.editor.trigger('valuechanged');\r\n    }\r\n    return $(document).trigger('selectionchange');\r\n  };\r\n\r\n\r\n  Simditor.Toolbar.addButton(UnderlineButton);\r\n\r\n  return UnderlineButton;\r\n\r\n});\ndefine('skylark-simditor/buttons/UnorderListButton',[\r\n  \"skylark-jquery\",\r\n  \"../Toolbar\",\r\n  \"../Simditor\",\r\n  \"./ListButton\"\r\n],function($,Toolbar,Simditor,ListButton){ \r\n   var UnorderListButton = ListButton.inherit({\r\n\r\n   });\r\n\r\n    UnorderListButton.prototype.type = 'ul';\r\n\r\n    UnorderListButton.prototype.name = 'ul';\r\n\r\n    UnorderListButton.prototype.icon = 'list-ul';\r\n\r\n    UnorderListButton.prototype.htmlTag = 'ul';\r\n\r\n    UnorderListButton.prototype.shortcut = 'cmd+.';\r\n\r\n    UnorderListButton.prototype._init = function() {\r\n      if (this.editor.util.os.mac) {\r\n        this.title = this.title + ' ( Cmd + . )';\r\n      } else {\r\n        this.title = this.title + ' ( Ctrl + . )';\r\n        this.shortcut = 'ctrl+.';\r\n      }\r\n      return ListButton.prototype._init.call(this);\r\n    };\r\n\r\n    Simditor.Toolbar.addButton(UnorderListButton);  \r\n\r\n    return UnorderListButton;\r\n\r\n});\ndefine('skylark-simditor/main',[\r\n  \"./Simditor\", \r\n  \"./Button\", \r\n  \"./Popover\", \r\n\r\n  \"./buttons/AlignmentButton\", \r\n  \"./buttons/BlockquoteButton\", \r\n  \"./buttons/BoldButton\", \r\n  \"./buttons/CodeButton\", \r\n  \"./buttons/CodePopover\", \r\n  \"./buttons/ColorButton\", \r\n  \"./buttons/FontScaleButton\", \r\n  \"./buttons/HrButton\", \r\n  \"./buttons/ImageButton\", \r\n  \"./buttons/ImagePopover\", \r\n  \"./buttons/IndentButton\", \r\n  \"./buttons/ItalicButton\", \r\n  \"./buttons/LinkButton\", \r\n  \"./buttons/LinkPopover\", \r\n  \"./buttons/ListButton\", \r\n  \"./buttons/OrderListButton\", \r\n  \"./buttons/OutdentButton\",\r\n  \"./buttons/StrikethroughButton\", \r\n  \"./buttons/TableButton\", \r\n  \"./buttons/TitleButton\", \r\n  \"./buttons/UnderlineButton\", \r\n  \"./buttons/UnorderListButton\"\r\n],function(Simditor){\r\n\t\r\n  return Simditor;\r\n});\ndefine('skylark-simditor', ['skylark-simditor/main'], function (main) { return main; });\n\n"]}