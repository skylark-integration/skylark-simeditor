{"version":3,"sources":["uploader.js"],"names":["define","$","extend","Module","id","Uploader","inherit","count","prototype","opts","url","params","fileKey","connectionCount","_init","_this","this","files","queue","on","e","file","splice","inArray","length","upload","shift","uploading","window","originalEvent","returnValue","_t","generateId","f","i","key","len","isArray","FileList","is","attr","makeArray","obj","getFile","push","triggerHandler","_xhrUpload","fileObj","name","ref","ref1","File","Blob","fileName","size","fileSize","ext","split","pop","toLowerCase","formData","k","v","FormData","append","xhr","ajax","data","processData","contentType","type","headers","X-File-Name","encodeURIComponent","req","ajaxSettings","onprogress","progress","lengthComputable","trigger","loaded","total","error","status","err","success","result","document","complete","responseText","cancel","abort","readImageFile","callback","fileReader","img","isFunction","Image","onload","onerror","FileReader","readAsDataURL","test","src","target","destroy","off","i18n","zh-CN","leaveConfirm","locale"],"mappings":"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","file":"../uploader.js","sourcesContent":["define([\n  \"skylark-jquery\",\n  \"./_extend\",\n  \"./Module\"\n],function($,extend,Module){ \n  var Uploader = Module.inherit({\n\n  });\n\n  Uploader.count = 0;\n\n  Uploader.prototype.opts = {\n    url: '',\n    params: null,\n    fileKey: 'upload_file',\n    connectionCount: 3\n  };\n\n  Uploader.prototype._init = function() {\n    this.files = [];\n    this.queue = [];\n    this.id = ++Uploader.count;\n    this.on('uploadcomplete', (function(_this) {\n      return function(e, file) {\n        _this.files.splice($.inArray(file, _this.files), 1);\n        if (_this.queue.length > 0 && _this.files.length < _this.opts.connectionCount) {\n          return _this.upload(_this.queue.shift());\n        } else {\n          return _this.uploading = false;\n        }\n      };\n    })(this));\n    return $(window).on('beforeunload.uploader-' + this.id, (function(_this) {\n      return function(e) {\n        if (!_this.uploading) {\n          return;\n        }\n        e.originalEvent.returnValue = _this._t('leaveConfirm');\n        return _this._t('leaveConfirm');\n      };\n    })(this));\n  };\n\n  Uploader.prototype.generateId = (function() {\n    var id;\n    id = 0;\n    return function() {\n      return id += 1;\n    };\n  })();\n\n  Uploader.prototype.upload = function(file, opts) {\n    var f, i, key, len;\n    if (opts == null) {\n      opts = {};\n    }\n    if (file == null) {\n      return;\n    }\n    if ($.isArray(file) || file instanceof FileList) {\n      for (i = 0, len = file.length; i < len; i++) {\n        f = file[i];\n        this.upload(f, opts);\n      }\n    } else if ($(file).is('input:file')) {\n      key = $(file).attr('name');\n      if (key) {\n        opts.fileKey = key;\n      }\n      this.upload($.makeArray($(file)[0].files), opts);\n    } else if (!file.id || !file.obj) {\n      file = this.getFile(file);\n    }\n    if (!(file && file.obj)) {\n      return;\n    }\n    $.extend(file, opts);\n    if (this.files.length >= this.opts.connectionCount) {\n      this.queue.push(file);\n      return;\n    }\n    if (this.triggerHandler('beforeupload', [file]) === false) {\n      return;\n    }\n    this.files.push(file);\n    this._xhrUpload(file);\n    return this.uploading = true;\n  };\n\n  Uploader.prototype.getFile = function(fileObj) {\n    var name, ref, ref1;\n    if (fileObj instanceof window.File || fileObj instanceof window.Blob) {\n      name = (ref = fileObj.fileName) != null ? ref : fileObj.name;\n    } else {\n      return null;\n    }\n    return {\n      id: this.generateId(),\n      url: this.opts.url,\n      params: this.opts.params,\n      fileKey: this.opts.fileKey,\n      name: name,\n      size: (ref1 = fileObj.fileSize) != null ? ref1 : fileObj.size,\n      ext: name ? name.split('.').pop().toLowerCase() : '',\n      obj: fileObj\n    };\n  };\n\n  Uploader.prototype._xhrUpload = function(file) {\n    var formData, k, ref, v;\n    formData = new FormData();\n    formData.append(file.fileKey, file.obj);\n    formData.append(\"original_filename\", file.name);\n    if (file.params) {\n      ref = file.params;\n      for (k in ref) {\n        v = ref[k];\n        formData.append(k, v);\n      }\n    }\n    return file.xhr = $.ajax({\n      url: file.url,\n      data: formData,\n      processData: false,\n      contentType: false,\n      type: 'POST',\n      headers: {\n        'X-File-Name': encodeURIComponent(file.name)\n      },\n      xhr: function() {\n        var req;\n        req = $.ajaxSettings.xhr();\n        if (req) {\n          req.upload.onprogress = (function(_this) {\n            return function(e) {\n              return _this.progress(e);\n            };\n          })(this);\n        }\n        return req;\n      },\n      progress: (function(_this) {\n        return function(e) {\n          if (!e.lengthComputable) {\n            return;\n          }\n          return _this.trigger('uploadprogress', [file, e.loaded, e.total]);\n        };\n      })(this),\n      error: (function(_this) {\n        return function(xhr, status, err) {\n          return _this.trigger('uploaderror', [file, xhr, status]);\n        };\n      })(this),\n      success: (function(_this) {\n        return function(result) {\n          _this.trigger('uploadprogress', [file, file.size, file.size]);\n          _this.trigger('uploadsuccess', [file, result]);\n          return $(document).trigger('uploadsuccess', [file, result, _this]);\n        };\n      })(this),\n      complete: (function(_this) {\n        return function(xhr, status) {\n          return _this.trigger('uploadcomplete', [file, xhr.responseText]);\n        };\n      })(this)\n    });\n  };\n\n  Uploader.prototype.cancel = function(file) {\n    var f, i, len, ref;\n    if (!file.id) {\n      ref = this.files;\n      for (i = 0, len = ref.length; i < len; i++) {\n        f = ref[i];\n        if (f.id === file * 1) {\n          file = f;\n          break;\n        }\n      }\n    }\n    this.trigger('uploadcancel', [file]);\n    if (file.xhr) {\n      file.xhr.abort();\n    }\n    return file.xhr = null;\n  };\n\n  Uploader.prototype.readImageFile = function(fileObj, callback) {\n    var fileReader, img;\n    if (!$.isFunction(callback)) {\n      return;\n    }\n    img = new Image();\n    img.onload = function() {\n      return callback(img);\n    };\n    img.onerror = function() {\n      return callback();\n    };\n    if (window.FileReader && FileReader.prototype.readAsDataURL && /^image/.test(fileObj.type)) {\n      fileReader = new FileReader();\n      fileReader.onload = function(e) {\n        return img.src = e.target.result;\n      };\n      return fileReader.readAsDataURL(fileObj);\n    } else {\n      return callback();\n    }\n  };\n\n  Uploader.prototype.destroy = function() {\n    var file, i, len, ref;\n    this.queue.length = 0;\n    ref = this.files;\n    for (i = 0, len = ref.length; i < len; i++) {\n      file = ref[i];\n      this.cancel(file);\n    }\n    $(window).off('.uploader-' + this.id);\n    return $(document).off('.uploader-' + this.id);\n  };\n\n  Uploader.i18n = {\n    'zh-CN': {\n      leaveConfirm: '正在上传文件，如果离开上传会自动取消'\n    }\n  };\n\n  Uploader.locale = 'zh-CN';\n\n  return  function(opts) {\n    return new Uploader(opts);\n  };\n\n});\n"]}