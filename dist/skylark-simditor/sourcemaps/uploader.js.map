{"version":3,"sources":["uploader.js"],"names":["define","langx","$","id","Uploader","Evented","inherit","init","_this","this","files","queue","count","on","e","file","splice","inArray","length","opts","connectionCount","upload","shift","uploading","window","originalEvent","returnValue","_t","prototype","url","params","fileKey","generateId","f","i","key","len","isArray","FileList","is","attr","makeArray","obj","getFile","extend","push","triggerHandler","_xhrUpload","fileObj","name","ref","ref1","File","Blob","fileName","size","fileSize","ext","split","pop","toLowerCase","formData","k","v","FormData","append","xhr","ajax","data","processData","contentType","type","headers","X-File-Name","encodeURIComponent","req","ajaxSettings","onprogress","progress","lengthComputable","trigger","loaded","total","error","status","err","success","result","document","complete","responseText","cancel","abort","readImageFile","callback","fileReader","img","isFunction","Image","onload","onerror","FileReader","readAsDataURL","test","src","target","destroy","off","i18n","zh-CN","leaveConfirm","locale"],"mappings":"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","file":"../uploader.js","sourcesContent":["define([\n  \"skylark-langx/langx\",\n  \"skylark-jquery\"\n],function(langx,$){ \n\n  var Uploader = langx.Evented.inherit({\n    init : function() {\n      this.files = [];\n      this.queue = [];\n      this.id = ++Uploader.count;\n      this.on('uploadcomplete', (function(_this) {\n        return function(e, file) {\n          _this.files.splice($.inArray(file, _this.files), 1);\n          if (_this.queue.length > 0 && _this.files.length < _this.opts.connectionCount) {\n            return _this.upload(_this.queue.shift());\n          } else {\n            return _this.uploading = false;\n          }\n        };\n      })(this));\n      return $(window).on('beforeunload.uploader-' + this.id, (function(_this) {\n        return function(e) {\n          if (!_this.uploading) {\n            return;\n          }\n          e.originalEvent.returnValue = _this._t('leaveConfirm');\n          return _this._t('leaveConfirm');\n        };\n      })(this));\n    }\n\n  });\n\n  Uploader.count = 0;\n\n  Uploader.prototype.opts = {\n    url: '',\n    params: null,\n    fileKey: 'upload_file',\n    connectionCount: 3\n  };\n\n\n\n  Uploader.prototype.generateId = (function() {\n    var id;\n    id = 0;\n    return function() {\n      return id += 1;\n    };\n  })();\n\n  Uploader.prototype.upload = function(file, opts) {\n    var f, i, key, len;\n    if (opts == null) {\n      opts = {};\n    }\n    if (file == null) {\n      return;\n    }\n    if ($.isArray(file) || file instanceof FileList) {\n      for (i = 0, len = file.length; i < len; i++) {\n        f = file[i];\n        this.upload(f, opts);\n      }\n    } else if ($(file).is('input:file')) {\n      key = $(file).attr('name');\n      if (key) {\n        opts.fileKey = key;\n      }\n      this.upload($.makeArray($(file)[0].files), opts);\n    } else if (!file.id || !file.obj) {\n      file = this.getFile(file);\n    }\n    if (!(file && file.obj)) {\n      return;\n    }\n    $.extend(file, opts);\n    if (this.files.length >= this.opts.connectionCount) {\n      this.queue.push(file);\n      return;\n    }\n    if (this.triggerHandler('beforeupload', [file]) === false) {\n      return;\n    }\n    this.files.push(file);\n    this._xhrUpload(file);\n    return this.uploading = true;\n  };\n\n  Uploader.prototype.getFile = function(fileObj) {\n    var name, ref, ref1;\n    if (fileObj instanceof window.File || fileObj instanceof window.Blob) {\n      name = (ref = fileObj.fileName) != null ? ref : fileObj.name;\n    } else {\n      return null;\n    }\n    return {\n      id: this.generateId(),\n      url: this.opts.url,\n      params: this.opts.params,\n      fileKey: this.opts.fileKey,\n      name: name,\n      size: (ref1 = fileObj.fileSize) != null ? ref1 : fileObj.size,\n      ext: name ? name.split('.').pop().toLowerCase() : '',\n      obj: fileObj\n    };\n  };\n\n  Uploader.prototype._xhrUpload = function(file) {\n    var formData, k, ref, v;\n    formData = new FormData();\n    formData.append(file.fileKey, file.obj);\n    formData.append(\"original_filename\", file.name);\n    if (file.params) {\n      ref = file.params;\n      for (k in ref) {\n        v = ref[k];\n        formData.append(k, v);\n      }\n    }\n    return file.xhr = $.ajax({\n      url: file.url,\n      data: formData,\n      processData: false,\n      contentType: false,\n      type: 'POST',\n      headers: {\n        'X-File-Name': encodeURIComponent(file.name)\n      },\n      xhr: function() {\n        var req;\n        req = $.ajaxSettings.xhr();\n        if (req) {\n          req.upload.onprogress = (function(_this) {\n            return function(e) {\n              return _this.progress(e);\n            };\n          })(this);\n        }\n        return req;\n      },\n      progress: (function(_this) {\n        return function(e) {\n          if (!e.lengthComputable) {\n            return;\n          }\n          return _this.trigger('uploadprogress', [file, e.loaded, e.total]);\n        };\n      })(this),\n      error: (function(_this) {\n        return function(xhr, status, err) {\n          return _this.trigger('uploaderror', [file, xhr, status]);\n        };\n      })(this),\n      success: (function(_this) {\n        return function(result) {\n          _this.trigger('uploadprogress', [file, file.size, file.size]);\n          _this.trigger('uploadsuccess', [file, result]);\n          return $(document).trigger('uploadsuccess', [file, result, _this]);\n        };\n      })(this),\n      complete: (function(_this) {\n        return function(xhr, status) {\n          return _this.trigger('uploadcomplete', [file, xhr.responseText]);\n        };\n      })(this)\n    });\n  };\n\n  Uploader.prototype.cancel = function(file) {\n    var f, i, len, ref;\n    if (!file.id) {\n      ref = this.files;\n      for (i = 0, len = ref.length; i < len; i++) {\n        f = ref[i];\n        if (f.id === file * 1) {\n          file = f;\n          break;\n        }\n      }\n    }\n    this.trigger('uploadcancel', [file]);\n    if (file.xhr) {\n      file.xhr.abort();\n    }\n    return file.xhr = null;\n  };\n\n  Uploader.prototype.readImageFile = function(fileObj, callback) {\n    var fileReader, img;\n    if (!$.isFunction(callback)) {\n      return;\n    }\n    img = new Image();\n    img.onload = function() {\n      return callback(img);\n    };\n    img.onerror = function() {\n      return callback();\n    };\n    if (window.FileReader && FileReader.prototype.readAsDataURL && /^image/.test(fileObj.type)) {\n      fileReader = new FileReader();\n      fileReader.onload = function(e) {\n        return img.src = e.target.result;\n      };\n      return fileReader.readAsDataURL(fileObj);\n    } else {\n      return callback();\n    }\n  };\n\n  Uploader.prototype.destroy = function() {\n    var file, i, len, ref;\n    this.queue.length = 0;\n    ref = this.files;\n    for (i = 0, len = ref.length; i < len; i++) {\n      file = ref[i];\n      this.cancel(file);\n    }\n    $(window).off('.uploader-' + this.id);\n    return $(document).off('.uploader-' + this.id);\n  };\n\n  Uploader.i18n = {\n    'zh-CN': {\n      leaveConfirm: '正在上传文件，如果离开上传会自动取消'\n    }\n  };\n\n  Uploader.locale = 'zh-CN';\n\n  return  function(opts) {\n    return new Uploader(opts);\n  };\n\n});\n"]}