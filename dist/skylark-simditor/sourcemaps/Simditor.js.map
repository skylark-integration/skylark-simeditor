{"version":3,"sources":["Simditor.js"],"names":["define","exports","module","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","$","extend","Module","hotkeys","uploader","Util","InputManager","Selection","UndoManager","Keystroke","Formatter","Toolbar","Indentation","Clipboard","i18n","Simditor","inherit","count","prototype","opts","textarea","placeholder","defaultImage","params","upload","indentWidth","_init","editor","uploadOpts","_this","this","util","length","Error","data","destroy","id","_render","el","body","on","_placeholder","setValue","val","trim","focus","browser","mozilla","reflow","document","execCommand","_error","inputManager","selection","undoManager","keystroke","formatter","toolbar","indentation","clipboard","_tpl","key","ref","results","insertBefore","wrapper","find","placeholderEl","append","blur","os","mac","addClass","linux","mobile","push","type","name","value","insertAfter","children","isEmptyNode","parseInt","css","show","hide","hidePopover","get","innerHTML","format","decorate","lastCaretPosition","trigger","getValue","sync","cloneBody","emptyP","firstP","lastP","clone","undecorate","autolink","last","first","is","prev","remove","next","html","$blockEl","range","caretPosition","phBr","appendTo","createRange","setRangeAtEndOf","each","i","popover","active","triggerHandler","closest","off","clear","focused","removeData","window"],"mappings":"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","file":"../Simditor.js","sourcesContent":["define([], function () {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    define([\n        'skylark-jquery',\n        './_extend',\n        './Module',\n        './hotkeys',\n        './uploader',\n        './Util',\n        './InputManager',\n        './Selection',\n        './UndoManager',\n        './Keystroke',\n        './Formatter',\n        './Toolbar',\n        './Indentation',\n        './Clipboard',\n        './i18n'\n    ], function ($, extend, Module, hotkeys, uploader, Util, InputManager, Selection, UndoManager, Keystroke, Formatter, Toolbar, Indentation, Clipboard, i18n) {\n        var Simditor = Module.inherit({});\n        Simditor.count = 0;\n        Simditor.prototype.opts = {\n            textarea: null,\n            placeholder: '',\n            defaultImage: 'images/image.png',\n            params: {},\n            upload: false,\n            indentWidth: 40\n        };\n        Simditor.prototype._init = function () {\n            this.util = new Util(this);\n            var e, editor, uploadOpts;\n            this.textarea = $(this.opts.textarea);\n            this.opts.placeholder = this.opts.placeholder || this.textarea.attr('placeholder');\n            if (!this.textarea.length) {\n                throw new Error('simditor: param textarea is required.');\n                return;\n            }\n            editor = this.textarea.data('simditor');\n            if (editor != null) {\n                editor.destroy();\n            }\n            this.id = ++Simditor.count;\n            this._render();\n            if (hotkeys) {\n                this.hotkeys = hotkeys({ el: this.body });\n            } else {\n                throw new Error('simditor: simple-hotkeys is required.');\n                return;\n            }\n            if (this.opts.upload && uploader) {\n                uploadOpts = typeof this.opts.upload === 'object' ? this.opts.upload : {};\n                this.uploader = uploader(uploadOpts);\n            }\n            this.on('initialized', function (_this) {\n                return function () {\n                    if (_this.opts.placeholder) {\n                        _this.on('valuechanged', function () {\n                            return _this._placeholder();\n                        });\n                    }\n                    _this.setValue(_this.textarea.val().trim() || '');\n                    if (_this.textarea.attr('autofocus')) {\n                        return _this.focus();\n                    }\n                };\n            }(this));\n            if (this.util.browser.mozilla) {\n                this.util.reflow();\n                try {\n                    document.execCommand('enableObjectResizing', false, false);\n                    return document.execCommand('enableInlineTableEditing', false, false);\n                } catch (_error) {\n                    e = _error;\n                }\n            }\n            this.inputManager = new InputManager(this);\n            this.selection = new Selection(this);\n            this.undoManager = new UndoManager(this);\n            this.keystroke = new Keystroke(this);\n            this.formatter = new Formatter(this);\n            this.toolbar = new Toolbar(this);\n            this.indentation = new Indentation(this);\n            this.clipboard = new Clipboard(this);\n        };\n        Simditor.prototype._tpl = '<div class=\"simditor\">\\n  <div class=\"simditor-wrapper\">\\n    <div class=\"simditor-placeholder\"></div>\\n    <div class=\"simditor-body\" contenteditable=\"true\">\\n    </div>\\n  </div>\\n</div>';\n        Simditor.prototype._render = function () {\n            var key, ref, results, val;\n            this.el = $(this._tpl).insertBefore(this.textarea);\n            this.wrapper = this.el.find('.simditor-wrapper');\n            this.body = this.wrapper.find('.simditor-body');\n            this.placeholderEl = this.wrapper.find('.simditor-placeholder').append(this.opts.placeholder);\n            this.el.data('simditor', this);\n            this.wrapper.append(this.textarea);\n            this.textarea.data('simditor', this).blur();\n            this.body.attr('tabindex', this.textarea.attr('tabindex'));\n            if (this.util.os.mac) {\n                this.el.addClass('simditor-mac');\n            } else if (this.util.os.linux) {\n                this.el.addClass('simditor-linux');\n            }\n            if (this.util.os.mobile) {\n                this.el.addClass('simditor-mobile');\n            }\n            if (this.opts.params) {\n                ref = this.opts.params;\n                results = [];\n                for (key in ref) {\n                    val = ref[key];\n                    results.push($('<input/>', {\n                        type: 'hidden',\n                        name: key,\n                        value: val\n                    }).insertAfter(this.textarea));\n                }\n                return results;\n            }\n        };\n        Simditor.prototype._placeholder = function () {\n            var children;\n            children = this.body.children();\n            if (children.length === 0 || children.length === 1 && this.util.isEmptyNode(children) && parseInt(children.css('margin-left') || 0) < this.opts.indentWidth) {\n                return this.placeholderEl.show();\n            } else {\n                return this.placeholderEl.hide();\n            }\n        };\n        Simditor.prototype.setValue = function (val) {\n            this.hidePopover();\n            this.textarea.val(val);\n            this.body.get(0).innerHTML = val;\n            this.formatter.format();\n            this.formatter.decorate();\n            this.util.reflow(this.body);\n            this.inputManager.lastCaretPosition = null;\n            return this.trigger('valuechanged');\n        };\n        Simditor.prototype.getValue = function () {\n            return this.sync();\n        };\n        Simditor.prototype.sync = function () {\n            var children, cloneBody, emptyP, firstP, lastP, val;\n            cloneBody = this.body.clone();\n            this.formatter.undecorate(cloneBody);\n            this.formatter.format(cloneBody);\n            this.formatter.autolink(cloneBody);\n            children = cloneBody.children();\n            lastP = children.last('p');\n            firstP = children.first('p');\n            while (lastP.is('p') && this.util.isEmptyNode(lastP)) {\n                emptyP = lastP;\n                lastP = lastP.prev('p');\n                emptyP.remove();\n            }\n            while (firstP.is('p') && this.util.isEmptyNode(firstP)) {\n                emptyP = firstP;\n                firstP = lastP.next('p');\n                emptyP.remove();\n            }\n            cloneBody.find('img.uploading').remove();\n            val = $.trim(cloneBody.html());\n            this.textarea.val(val);\n            return val;\n        };\n        Simditor.prototype.focus = function () {\n            var $blockEl, range;\n            if (!(this.body.is(':visible') && this.body.is('[contenteditable]'))) {\n                this.el.find('textarea:visible').focus();\n                return;\n            }\n            if (this.inputManager.lastCaretPosition) {\n                this.undoManager.caretPosition(this.inputManager.lastCaretPosition);\n                return this.inputManager.lastCaretPosition = null;\n            } else {\n                $blockEl = this.body.children().last();\n                if (!$blockEl.is('p')) {\n                    $blockEl = $('<p/>').append(this.util.phBr).appendTo(this.body);\n                }\n                range = document.createRange();\n                return this.selection.setRangeAtEndOf($blockEl, range);\n            }\n        };\n        Simditor.prototype.blur = function () {\n            if (this.body.is(':visible') && this.body.is('[contenteditable]')) {\n                return this.body.blur();\n            } else {\n                return this.body.find('textarea:visible').blur();\n            }\n        };\n        Simditor.prototype.hidePopover = function () {\n            return this.el.find('.simditor-popover').each(function (i, popover) {\n                popover = $(popover).data('popover');\n                if (popover.active) {\n                    return popover.hide();\n                }\n            });\n        };\n        Simditor.prototype.destroy = function () {\n            this.triggerHandler('destroy');\n            this.textarea.closest('form').off('.simditor .simditor-' + this.id);\n            this.selection.clear();\n            this.inputManager.focused = false;\n            this.textarea.insertBefore(this.el).hide().val('').removeData('simditor');\n            this.el.remove();\n            $(document).off('.simditor-' + this.id);\n            $(window).off('.simditor-' + this.id);\n            return this.off();\n        };\n        Simditor.Toolbar = Toolbar;\n        Simditor.i18n = i18n;\n        return Simditor;\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}