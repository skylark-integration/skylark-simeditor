{"version":3,"sources":["Simditor.js"],"names":["define","exports","module","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","$","extend","Module","hotkeys","uploader","Util","InputManager","Selection","UndoManager","Keystroke","Formatter","Toolbar","Indentation","Clipboard","i18n","Simditor","inherit","connect","count","prototype","opts","textarea","placeholder","defaultImage","params","upload","indentWidth","_init","editor","uploadOpts","_this","this","length","Error","data","destroy","id","_render","el","body","on","_placeholder","setValue","val","trim","focus","util","browser","mozilla","reflow","document","execCommand","_error","_tpl","key","ref","results","insertBefore","wrapper","find","placeholderEl","append","blur","os","mac","addClass","linux","mobile","push","type","name","value","insertAfter","children","isEmptyNode","parseInt","css","show","hide","hidePopover","get","innerHTML","formatter","format","decorate","inputManager","lastCaretPosition","trigger","getValue","sync","cloneBody","emptyP","firstP","lastP","clone","undecorate","autolink","last","first","is","prev","remove","next","html","$blockEl","range","undoManager","caretPosition","phBr","appendTo","createRange","selection","setRangeAtEndOf","each","i","popover","active","triggerHandler","closest","off","clear","focused","removeData","window"],"mappings":"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","file":"../Simditor.js","sourcesContent":["define([], function () {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    define([\n        'skylark-jquery',\n        './_extend',\n        './Module',\n        './hotkeys',\n        './uploader',\n        './Util',\n        './InputManager',\n        './Selection',\n        './UndoManager',\n        './Keystroke',\n        './Formatter',\n        './Toolbar',\n        './Indentation',\n        './Clipboard',\n        './i18n'\n    ], function ($, extend, Module, hotkeys, uploader, Util, InputManager, Selection, UndoManager, Keystroke, Formatter, Toolbar, Indentation, Clipboard, i18n) {\n        var Simditor = Module.inherit({});\n        Simditor.connect(Util);\n        Simditor.connect(InputManager);\n        Simditor.connect(Selection);\n        Simditor.connect(UndoManager);\n        Simditor.connect(Keystroke);\n        Simditor.connect(Formatter);\n        Simditor.connect(Toolbar);\n        Simditor.connect(Indentation);\n        Simditor.connect(Clipboard);\n        Simditor.count = 0;\n        Simditor.prototype.opts = {\n            textarea: null,\n            placeholder: '',\n            defaultImage: 'images/image.png',\n            params: {},\n            upload: false,\n            indentWidth: 40\n        };\n        Simditor.prototype._init = function () {\n            var e, editor, uploadOpts;\n            this.textarea = $(this.opts.textarea);\n            this.opts.placeholder = this.opts.placeholder || this.textarea.attr('placeholder');\n            if (!this.textarea.length) {\n                throw new Error('simditor: param textarea is required.');\n                return;\n            }\n            editor = this.textarea.data('simditor');\n            if (editor != null) {\n                editor.destroy();\n            }\n            this.id = ++Simditor.count;\n            this._render();\n            if (hotkeys) {\n                this.hotkeys = hotkeys({ el: this.body });\n            } else {\n                throw new Error('simditor: simple-hotkeys is required.');\n                return;\n            }\n            if (this.opts.upload && uploader) {\n                uploadOpts = typeof this.opts.upload === 'object' ? this.opts.upload : {};\n                this.uploader = uploader(uploadOpts);\n            }\n            this.on('initialized', function (_this) {\n                return function () {\n                    if (_this.opts.placeholder) {\n                        _this.on('valuechanged', function () {\n                            return _this._placeholder();\n                        });\n                    }\n                    _this.setValue(_this.textarea.val().trim() || '');\n                    if (_this.textarea.attr('autofocus')) {\n                        return _this.focus();\n                    }\n                };\n            }(this));\n            if (this.util.browser.mozilla) {\n                this.util.reflow();\n                try {\n                    document.execCommand('enableObjectResizing', false, false);\n                    return document.execCommand('enableInlineTableEditing', false, false);\n                } catch (_error) {\n                    e = _error;\n                }\n            }\n        };\n        Simditor.prototype._tpl = '<div class=\"simditor\">\\n  <div class=\"simditor-wrapper\">\\n    <div class=\"simditor-placeholder\"></div>\\n    <div class=\"simditor-body\" contenteditable=\"true\">\\n    </div>\\n  </div>\\n</div>';\n        Simditor.prototype._render = function () {\n            var key, ref, results, val;\n            this.el = $(this._tpl).insertBefore(this.textarea);\n            this.wrapper = this.el.find('.simditor-wrapper');\n            this.body = this.wrapper.find('.simditor-body');\n            this.placeholderEl = this.wrapper.find('.simditor-placeholder').append(this.opts.placeholder);\n            this.el.data('simditor', this);\n            this.wrapper.append(this.textarea);\n            this.textarea.data('simditor', this).blur();\n            this.body.attr('tabindex', this.textarea.attr('tabindex'));\n            if (this.util.os.mac) {\n                this.el.addClass('simditor-mac');\n            } else if (this.util.os.linux) {\n                this.el.addClass('simditor-linux');\n            }\n            if (this.util.os.mobile) {\n                this.el.addClass('simditor-mobile');\n            }\n            if (this.opts.params) {\n                ref = this.opts.params;\n                results = [];\n                for (key in ref) {\n                    val = ref[key];\n                    results.push($('<input/>', {\n                        type: 'hidden',\n                        name: key,\n                        value: val\n                    }).insertAfter(this.textarea));\n                }\n                return results;\n            }\n        };\n        Simditor.prototype._placeholder = function () {\n            var children;\n            children = this.body.children();\n            if (children.length === 0 || children.length === 1 && this.util.isEmptyNode(children) && parseInt(children.css('margin-left') || 0) < this.opts.indentWidth) {\n                return this.placeholderEl.show();\n            } else {\n                return this.placeholderEl.hide();\n            }\n        };\n        Simditor.prototype.setValue = function (val) {\n            this.hidePopover();\n            this.textarea.val(val);\n            this.body.get(0).innerHTML = val;\n            this.formatter.format();\n            this.formatter.decorate();\n            this.util.reflow(this.body);\n            this.inputManager.lastCaretPosition = null;\n            return this.trigger('valuechanged');\n        };\n        Simditor.prototype.getValue = function () {\n            return this.sync();\n        };\n        Simditor.prototype.sync = function () {\n            var children, cloneBody, emptyP, firstP, lastP, val;\n            cloneBody = this.body.clone();\n            this.formatter.undecorate(cloneBody);\n            this.formatter.format(cloneBody);\n            this.formatter.autolink(cloneBody);\n            children = cloneBody.children();\n            lastP = children.last('p');\n            firstP = children.first('p');\n            while (lastP.is('p') && this.util.isEmptyNode(lastP)) {\n                emptyP = lastP;\n                lastP = lastP.prev('p');\n                emptyP.remove();\n            }\n            while (firstP.is('p') && this.util.isEmptyNode(firstP)) {\n                emptyP = firstP;\n                firstP = lastP.next('p');\n                emptyP.remove();\n            }\n            cloneBody.find('img.uploading').remove();\n            val = $.trim(cloneBody.html());\n            this.textarea.val(val);\n            return val;\n        };\n        Simditor.prototype.focus = function () {\n            var $blockEl, range;\n            if (!(this.body.is(':visible') && this.body.is('[contenteditable]'))) {\n                this.el.find('textarea:visible').focus();\n                return;\n            }\n            if (this.inputManager.lastCaretPosition) {\n                this.undoManager.caretPosition(this.inputManager.lastCaretPosition);\n                return this.inputManager.lastCaretPosition = null;\n            } else {\n                $blockEl = this.body.children().last();\n                if (!$blockEl.is('p')) {\n                    $blockEl = $('<p/>').append(this.util.phBr).appendTo(this.body);\n                }\n                range = document.createRange();\n                return this.selection.setRangeAtEndOf($blockEl, range);\n            }\n        };\n        Simditor.prototype.blur = function () {\n            if (this.body.is(':visible') && this.body.is('[contenteditable]')) {\n                return this.body.blur();\n            } else {\n                return this.body.find('textarea:visible').blur();\n            }\n        };\n        Simditor.prototype.hidePopover = function () {\n            return this.el.find('.simditor-popover').each(function (i, popover) {\n                popover = $(popover).data('popover');\n                if (popover.active) {\n                    return popover.hide();\n                }\n            });\n        };\n        Simditor.prototype.destroy = function () {\n            this.triggerHandler('destroy');\n            this.textarea.closest('form').off('.simditor .simditor-' + this.id);\n            this.selection.clear();\n            this.inputManager.focused = false;\n            this.textarea.insertBefore(this.el).hide().val('').removeData('simditor');\n            this.el.remove();\n            $(document).off('.simditor-' + this.id);\n            $(window).off('.simditor-' + this.id);\n            return this.off();\n        };\n        Simditor.i18n = i18n;\n        return Simditor;\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}