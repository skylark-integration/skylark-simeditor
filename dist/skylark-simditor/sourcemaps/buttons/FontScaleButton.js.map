{"version":3,"sources":["buttons/FontScaleButton.js"],"names":["define","$","Toolbar","Simditor","Button","i18n","FontScaleButton","inherit","prototype","name","icon","htmlTag","disableTag","sizeMap","x-large","large","small","x-small","_init","this","menu","text","translate","param","call","_activeStatus","active","endNode","endNodes","startNode","startNodes","editor","editable","selection","range","filter","length","is","setActive","command","containerNode","_this","collapsed","document","execCommand","reset","nodeType","Node","TEXT_NODE","closest","find","each","i","n","$span","size","style","fontSize","test","css","replaceWith","contents","trigger","addButton"],"mappings":";;;;;;;AAAAA,QACE,0BACA,aACA,cACA,YACA,WACA,SAASC,EAAEC,EAAQC,EAASC,EAAOC,GAElC,IAAIC,EAAkBF,EAAOG,YAmG9B,OA7FAD,EAAgBE,UAAUC,KAAO,YAEjCH,EAAgBE,UAAUE,KAAO,OAEjCJ,EAAgBE,UAAUG,QAAU,OAEpCL,EAAgBE,UAAUI,WAAa,0BAEvCN,EAAgBE,UAAUK,SACxBC,UAAW,QACXC,MAAS,SACTC,MAAS,QACTC,UAAW,QAGbX,EAAgBE,UAAUU,MAAQ,WAwBhC,OAvBAC,KAAKC,OAEDX,KAAM,OACNY,KAAMhB,EAAKiB,UAAU,mBACrBC,MAAO,MAEPd,KAAM,OACNY,KAAMhB,EAAKiB,UAAU,kBACrBC,MAAO,MAEPd,KAAM,OACNY,KAAMhB,EAAKiB,UAAU,mBACrBC,MAAO,MAEPd,KAAM,MACNY,KAAMhB,EAAKiB,UAAU,kBACrBC,MAAO,MAEPd,KAAM,MACNY,KAAMhB,EAAKiB,UAAU,mBACrBC,MAAO,MAGJnB,EAAOI,UAAUU,MAAMM,KAAKL,OAGrCb,EAAgBE,UAAUiB,cAAgB,WACxC,IAAIC,EAAQC,EAASC,EAAiBC,EAAWC,EAQjD,OAPQX,KAAKY,OAAOC,SAASC,UAAUC,QACvCJ,EAAaX,KAAKY,OAAOC,SAASC,UAAUH,aAC5CF,EAAWT,KAAKY,OAAOC,SAASC,UAAUL,WAC1CC,EAAYC,EAAWK,OAAO,4BAC9BR,EAAUC,EAASO,OAAO,4BAC1BT,EAASI,EAAWM,OAAS,GAAKR,EAASQ,OAAS,GAAKP,EAAUQ,GAAGV,GACtER,KAAKmB,UAAUZ,GACRP,KAAKO,QAGdpB,EAAgBE,UAAU+B,QAAU,SAAShB,GAC3C,IAAaiB,EAAeN,EAiBLO,EAfvB,KADAP,EAAQf,KAAKY,OAAOC,SAASC,UAAUC,SAC7BQ,UA+BV,OA5BAvB,KAAKY,OAAOC,SAASC,UAAUC,MAAMA,GACrCS,SAASC,YAAY,gBAAgB,GAAO,GAC5CD,SAASC,YAAY,YAAY,EAAOrB,GACxCoB,SAASC,YAAY,gBAAgB,GAAO,GAC5CzB,KAAKY,OAAOC,SAASC,UAAUY,QAC/B1B,KAAKY,OAAOC,SAASC,UAAUC,UAC/BM,EAAgBrB,KAAKY,OAAOC,SAASC,UAAUO,iBAC7B,GAAGM,WAAaC,KAAKC,UAC3BR,EAAcS,QAAQ,4BAEtBT,EAAcU,KAAK,6BAEvBC,MAAeV,EAepBtB,KAdM,SAASiC,EAAGC,GACjB,IAAIC,EAAOC,EAGX,OAFAD,EAAQrD,EAAEoD,GACVE,EAAOF,EAAEG,MAAMC,SACX,8BAA8BC,KAAKH,GAC9BD,EAAMK,IAAI,WAAYlB,EAAM5B,QAAQ0C,IACzB,WAATA,EACLD,EAAM,GAAGE,MAAMpB,OAAS,EACnBkB,EAAMK,IAAI,WAAY,IAEtBL,EAAMM,YAAYN,EAAMO,iBAJ5B,KASJ1C,KAAKY,OAAO+B,QAAQ,iBAG7B3D,EAASD,QAAQ6D,UAAUzD,GAEpBA","file":"../../buttons/FontScaleButton.js","sourcesContent":["define([\r\n  \"skylark-utils-dom/query\",\r\n  \"../Toolbar\",\r\n  \"../Simditor\",\r\n  \"../Button\",\r\n  \"../i18n\"\r\n],function($,Toolbar,Simditor,Button,i18n){ \r\n  \r\n   var FontScaleButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n\r\n  FontScaleButton.prototype.name = 'fontScale';\r\n\r\n  FontScaleButton.prototype.icon = 'font';\r\n\r\n  FontScaleButton.prototype.htmlTag = 'span';\r\n\r\n  FontScaleButton.prototype.disableTag = 'pre, h1, h2, h3, h4, h5';\r\n\r\n  FontScaleButton.prototype.sizeMap = {\r\n    'x-large': '1.5em',\r\n    'large': '1.25em',\r\n    'small': '.75em',\r\n    'x-small': '.5em'\r\n  };\r\n\r\n  FontScaleButton.prototype._init = function() {\r\n    this.menu = [\r\n      {\r\n        name: '150%',\r\n        text: i18n.translate('fontScaleXLarge'),\r\n        param: '5'\r\n      }, {\r\n        name: '125%',\r\n        text: i18n.translate('fontScaleLarge'),\r\n        param: '4'\r\n      }, {\r\n        name: '100%',\r\n        text: i18n.translate('fontScaleNormal'),\r\n        param: '3'\r\n      }, {\r\n        name: '75%',\r\n        text: i18n.translate('fontScaleSmall'),\r\n        param: '2'\r\n      }, {\r\n        name: '50%',\r\n        text: i18n.translate('fontScaleXSmall'),\r\n        param: '1'\r\n      }\r\n    ];\r\n    return Button.prototype._init.call(this);\r\n  };\r\n\r\n  FontScaleButton.prototype._activeStatus = function() {\r\n    var active, endNode, endNodes, range, startNode, startNodes;\r\n    range = this.editor.editable.selection.range();\r\n    startNodes = this.editor.editable.selection.startNodes();\r\n    endNodes = this.editor.editable.selection.endNodes();\r\n    startNode = startNodes.filter('span[style*=\"font-size\"]');\r\n    endNode = endNodes.filter('span[style*=\"font-size\"]');\r\n    active = startNodes.length > 0 && endNodes.length > 0 && startNode.is(endNode);\r\n    this.setActive(active);\r\n    return this.active;\r\n  };\r\n\r\n  FontScaleButton.prototype.command = function(param) {\r\n    var $scales, containerNode, range;\r\n    range = this.editor.editable.selection.range();\r\n    if (range.collapsed) {\r\n      return;\r\n    }\r\n    this.editor.editable.selection.range(range);\r\n    document.execCommand('styleWithCSS', false, true);\r\n    document.execCommand('fontSize', false, param);\r\n    document.execCommand('styleWithCSS', false, false);\r\n    this.editor.editable.selection.reset();\r\n    this.editor.editable.selection.range();\r\n    containerNode = this.editor.editable.selection.containerNode();\r\n    if (containerNode[0].nodeType === Node.TEXT_NODE) {\r\n      $scales = containerNode.closest('span[style*=\"font-size\"]');\r\n    } else {\r\n      $scales = containerNode.find('span[style*=\"font-size\"]');\r\n    }\r\n    $scales.each((function(_this) {\r\n      return function(i, n) {\r\n        var $span, size;\r\n        $span = $(n);\r\n        size = n.style.fontSize;\r\n        if (/large|x-large|small|x-small/.test(size)) {\r\n          return $span.css('fontSize', _this.sizeMap[size]);\r\n        } else if (size === 'medium') {\r\n          if ($span[0].style.length > 1) {\r\n            return $span.css('fontSize', '');\r\n          } else {\r\n            return $span.replaceWith($span.contents());\r\n          }\r\n        }\r\n      };\r\n    })(this));\r\n    return this.editor.trigger('valuechanged');\r\n  };\r\n\r\n  Simditor.Toolbar.addButton(FontScaleButton);\r\n\r\n  return FontScaleButton;\r\n\r\n});"]}