{"version":3,"sources":["buttons/ItalicButton.js"],"names":["define","$","Toolbar","Simditor","Button","ItalicButton","inherit","prototype","name","icon","htmlTag","disableTag","shortcut","_init","this","editor","editable","util","os","mac","title","call","_activeStatus","active","document","queryCommandState","setActive","command","execCommand","support","oninput","trigger","addButton"],"mappings":";;;;;;;AAAAA,QACE,0BACA,aACA,cACA,aACA,SAASC,EAAEC,EAAQC,EAASC,GAG5B,IAAIC,EAAeD,EAAOE,YA0C1B,OArCAD,EAAaE,UAAUC,KAAO,SAE9BH,EAAaE,UAAUE,KAAO,SAE9BJ,EAAaE,UAAUG,QAAU,IAEjCL,EAAaE,UAAUI,WAAa,MAEpCN,EAAaE,UAAUK,SAAW,QAElCP,EAAaE,UAAUM,MAAQ,WAO7B,OANIC,KAAKC,OAAOC,SAASC,KAAKC,GAAGC,IAC/BL,KAAKM,MAAQN,KAAKM,MAAQ,gBAE1BN,KAAKM,MAAQN,KAAKM,MAAQ,gBAC1BN,KAAKF,SAAW,UAEXR,EAAOG,UAAUM,MAAMQ,KAAKP,OAGrCT,EAAaE,UAAUe,cAAgB,WACrC,IAAIC,EAGJ,OAFAA,GAAkD,IAAzCC,SAASC,kBAAkB,UACpCX,KAAKY,UAAUH,GACRT,KAAKS,QAGdlB,EAAaE,UAAUoB,QAAU,WAK/B,OAJAH,SAASI,YAAY,UAChBd,KAAKC,OAAOC,SAASC,KAAKY,QAAQC,SACrChB,KAAKC,OAAOgB,QAAQ,gBAEf9B,EAAEuB,UAAUO,QAAQ,oBAG7B5B,EAASD,QAAQ8B,UAAU3B,GAEpBA","file":"../../buttons/ItalicButton.js","sourcesContent":["define([\r\n  \"skylark-utils-dom/query\",\r\n  \"../Toolbar\",\r\n  \"../Simditor\",\r\n  \"../Button\"\r\n],function($,Toolbar,Simditor,Button){ \r\n  \r\n\r\n  var ItalicButton = Button.inherit({\r\n\r\n   });\r\n\r\n\r\n  ItalicButton.prototype.name = 'italic';\r\n\r\n  ItalicButton.prototype.icon = 'italic';\r\n\r\n  ItalicButton.prototype.htmlTag = 'i';\r\n\r\n  ItalicButton.prototype.disableTag = 'pre';\r\n\r\n  ItalicButton.prototype.shortcut = 'cmd+i';\r\n\r\n  ItalicButton.prototype._init = function() {\r\n    if (this.editor.editable.util.os.mac) {\r\n      this.title = this.title + \" ( Cmd + i )\";\r\n    } else {\r\n      this.title = this.title + \" ( Ctrl + i )\";\r\n      this.shortcut = 'ctrl+i';\r\n    }\r\n    return Button.prototype._init.call(this);\r\n  };\r\n\r\n  ItalicButton.prototype._activeStatus = function() {\r\n    var active;\r\n    active = document.queryCommandState('italic') === true;\r\n    this.setActive(active);\r\n    return this.active;\r\n  };\r\n\r\n  ItalicButton.prototype.command = function() {\r\n    document.execCommand('italic');\r\n    if (!this.editor.editable.util.support.oninput) {\r\n      this.editor.trigger('valuechanged');\r\n    }\r\n    return $(document).trigger('selectionchange');\r\n  };\r\n\r\n  Simditor.Toolbar.addButton(ItalicButton); \r\n\r\n  return ItalicButton;\r\n\r\n});"]}